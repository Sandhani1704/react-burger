{"version":3,"sources":["components/order-item-details/order-item-details.module.css","components/ui/loader/loader.module.css","components/modal-overlay/modal-overlay.module.css","components/burger-constructor-main-element/burger-constructor-main-element.module.css","pages/ingredient-details-page/ingredient-details-page.module.css","pages/feed/feed.module.css","components/burger-constructor/burger-constructor.module.css","components/app-header/app-header.module.css","components/app-header/app-header.tsx","utils/hooks.ts","components/ingredient-item/ingredient-item.tsx","services/actions/ingredient-details.ts","services/actions/burgers-constructor.ts","components/ui/loader/loader.svg.tsx","components/ui/loader/loader.tsx","components/ingredient-details/ingredient-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/burger-ingredients/burger-ingredients.tsx","components/burger-constructor-main-element/burger-constructor-main-element.tsx","utils/cookies.ts","utils/constants.ts","utils/api.ts","utils/api-requests.ts","services/actions/user-info.ts","services/actions/order-details.ts","images/graphics.png","components/order-details/order-details.tsx","components/burger-constructor/burger-constructor.tsx","components/main/main.tsx","pages/home-page/home-page.tsx","pages/login-page/login-page.tsx","pages/registration-page/registration-page.tsx","pages/forgot-password/forgot-password.tsx","components/profile-navigation/profile-navigation.tsx","pages/profile-page/profile-page.tsx","services/actions/ws-actions.ts","utils/formating.ts","components/order-item/order-item.tsx","components/order-item-list/order-item-list.tsx","pages/feed/feed.tsx","services/actions/ws-private-actions.ts","components/order-item-details/order-item-details.tsx","pages/order-item-details-page/order-item-details-page.tsx","pages/reset-password/reset-password.tsx","pages/not-found/not-found.tsx","pages/ingredient-details-page/ingredient-details-page.tsx","components/protected-route/protected-route.tsx","pages/user-orders/user-orders.tsx","services/actions/burger-ingredients-data.ts","components/app/app.tsx","services/reducers/burgers-constructor.ts","services/reducers/order-details.ts","services/reducers/burger-ingredients-data.ts","services/reducers/ingredient-details.ts","services/reducers/user-info.ts","services/reducers/ws-reducer.ts","services/reducers/ws-private-reducer.ts","services/reducers/index.ts","services/middleware/socketMiddleware.ts","services/store.ts","index.tsx","components/burger-ingredients/burger-ingredients.module.css","components/profile-navigation/profile-navigation.module.css","components/order-item/order-item.module.css","components/ingredient-details/ingredient-details.module.css","components/modal/modal.module.css","pages/login-page/login-page.module.css","pages/profile-page/profile-page.module.css","pages/user-orders/user-orders.module.css","components/ingredient-item/ingredient-item.module.css","pages/registration-page/registration-page.module.css","components/main/main.module.css","components/order-details/order-details.module.css","pages/forgot-password/forgot-password.module.css","components/order-item-list/order-item-list.module.css","pages/reset-password/reset-password.module.css","components/app/app.module.css"],"names":["module","exports","AppHeader","isActive","useLocation","pathname","className","styles","header","content","left","item","exact","to","activeClassName","active","type","center","right","useAppDispatch","useDispatch","useAppSelector","useSelector","IngredientItem","info","onIngredientClick","addedIngredients","state","burgersConstructor","useDrag","collect","monitor","isDrag","isDragging","dragRef","currentCount","useMemo","filter","_id","length","location","onClick","ref","background","src","image","alt","name","price","caption","count","size","DISPLAY_INGREDIENT_INFO","HIDE_INGREDIENT_INFO","ADD_INGREDIENT","DELETE_INGREDIENT","SORT_INGREDIENTS","CLEAR_PREV_ORDER","CHANGE_ACTIVE_TAB","LoaderSvg","color","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","from","dur","repeatCount","Loader","style","wrapper","IngredientDetails","selectedIngredient","ingredientInfo","ingredients","burgerIngredientsData","id","useParams","find","image_wrapper","image_large","nutrition","calories","proteins","fat","carbohydrates","ModalOverlay","onModalHideClick","ReactDOM","createPortal","overlay","document","body","modalRoot","getElementById","Modal","title","children","React","useEffect","handleEscClose","evt","key","addEventListener","removeEventListener","popup","container","BurgerIngredients","bunRef","useRef","sauceRef","mainRef","useState","popupOpen","setPopupOpen","dispatch","itemsRequest","itemsFailed","currentTab","ingredientCont","listenScrollEvent","tabs","buns","sauces","main","isShouldChangeActiveTab","block","getBoundingClientRect","top","bottom","activeTab","handleTab","value","current","scrollIntoView","behavior","types","list","map","BurgerConstructorMainElement","index","deleteIngredient","drag","useDrop","accept","isHovered","isOver","hover","dragIndex","hoverIndex","drop","text","thumbnail","handleClose","setCookie","props","exp","path","expires","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","getToken","fullString","BASE_URL","ORDERS_URL","USER_ORDERS_URL","INGREDIENTS_URL","ORDER_URL","REGISTRATION_ADDRESS","LOGIN_ADDRESS","GET_USER_ADDRESS","LOGOUT_ADDRESS","REFRESH_TOKEN_ADDRESS","PASSWORD_RESET_ADDRESS","SET_NEW_PASSWORD","checkResponse","res","ok","json","then","err","Promise","reject","GET_USER_REQUEST","SET_USER_INFO","REMOVE_USER_INFO","RESPONSED_EMAIL","SET_LOGIN_REQUEST_ERROR","SET_REGISTER_REQUEST_ERROR","SET_LOGOUT_REQUEST_ERROR","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_ERROR","setAuth","accessToken","localStorage","setItem","refreshToken","user","registerUser","email","password","fetch","method","headers","JSON","stringify","registration","success","catch","message","loginUser","login","logout","history","token","getItem","removeItem","push","updateToken","mode","cache","credentials","data","getUser","Authorization","console","log","updateUserInfo","updateUser","passwordReset","forgotPassword","setNewPasswordValue","setNewPassword","GET_ORDER_SUCCESS","GET_ORDER_REQUEST","GET_ORDER_FAILED","HIDE_ORDER_INFO","getOrderNumber","ingredientsId","Accept","getOrder","order","OrderDetails","numberOrder","orderRequest","orderRequestFaild","store","userInfo","userUnfo","number","DoneIcon","BurgerConstructor","orderDetailsModal","setOrderDetailsModal","allItemsId","ingredient","isHover","dropTarget","totalSum","reduce","prev","bun","constructor","onHover","display","gap","justifyContent","isLocked","total","orderDetailsModalClick","Main","DndProvider","backend","HTML5Backend","HomePage","LoginPage","loginError","emailValue","setEmail","passwordValue","setPassword","onSubmit","e","preventDefault","placeholder","onChange","target","error","link","RegistrationPage","registerError","nameValue","setName","ForgotPassword","useHistory","ProfileNavigation","logOutError","nav","event","ProfilePage","userData","setUserData","isChanged","setIsChanged","isSomeChanges","Object","values","some","Boolean","profile","icon","currentTarget","onIconClick","buttons","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ORDERS","WS_SET_ORDER","CLOSE_POPUP_ORDER_INFO","OPEN_POPUP_ORDER_INFO","wsActions","wsInit","onOpen","onError","onClose","onMessage","wsSendMessage","transformDate","date","dataCreate","today","setHours","days","diffTime","Math","ceil","hours","getHours","min","getMinutes","getTimezoneOffset","OrderItem","status","ordersImages","orderId","visibleOrdersImages","slice","countHiddenOrdersImages","bunsCount","orderPrice","acc","updatedAt","backgroundImage","image_mobile","OrderItemList","orders","ordersInfo","Feed","wsUrl","totalToday","done","glow","WS_PRIVATE_CONNECTION_START","WS_PRIVATE_CONNECTION_ERROR","WS_PRIVATE_CONNECTION_CLOSED","WS_PRIVATE_GET_ORDERS","WS_PRIVATE_SET_ORDER","wsPrivateActions","OrderItemDetails","isProfile","useRouteMatch","wsPrivateReducer","selectedOrder","listId","orderIngredients","sum","showStatus","OrderItemDetailsPage","ResetPassword","isResponsedEmail","code","setCode","NotFound","textAlign","IngredientDetailsPage","ProtectedRoute","rest","render","UserOrders","GET_ITEMS_REQUEST","GET_ITEMS_SUCCESS","GET_ITEMS_FAILED","getItems","App","ModalSwitch","isShowModal","action","go","app","initialState","userRequest","refreshTokenRequest","refreshTokenSuccess","refreshTokenError","wsConnected","currentOrder","popupOrderInfo","rootReducer","combineReducers","newArr","draggedItem","targetItem","splice","payload","socketMiddleware","socket","next","WebSocket","onopen","onerror","onmessage","parsedData","parse","restParsedData","onclose","send","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","Router","HashRouter","StrictMode","basename"],"mappings":"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","file":"static/js/main.bc7edc16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-item-details_order__2FvsZ\",\"number\":\"order-item-details_number__stThw\",\"order-name\":\"order-item-details_order-name__ytVJn\",\"status-done\":\"order-item-details_status-done__2dHyh\",\"left-align\":\"order-item-details_left-align__34W9k\",\"ingredients\":\"order-item-details_ingredients__1ThRJ\",\"ingredient\":\"order-item-details_ingredient__3OTYO\",\"ingredient-preview\":\"order-item-details_ingredient-preview__1IKl1\",\"price\":\"order-item-details_price__1XJGZ\",\"order-price\":\"order-item-details_order-price__3cPGg\",\"image-box\":\"order-item-details_image-box__2gmbr\",\"content\":\"order-item-details_content__3MofV\",\"bottom-content\":\"order-item-details_bottom-content__7KDxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"loader_wrapper__UkZQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__3tZ0G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-element\":\"burger-constructor-main-element_main-element__2IzGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ingredient-details-page_title__25sYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__1051O\",\"content\":\"feed_content__2pe8j\",\"list\":\"feed_list__6gbkV\",\"info\":\"feed_info__tmrb2\",\"status\":\"feed_status__1pk7n\",\"item\":\"feed_item__1ebTZ\",\"item-done\":\"feed_item-done__2Q9fC\",\"done\":\"feed_done__jM033\",\"glow\":\"feed_glow__3mmJo\",\"link\":\"feed_link___vaLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__Xhhr3\",\"container\":\"burger-constructor_container__35gCy\",\"top-container\":\"burger-constructor_top-container__2qKcP\",\"bottom-container\":\"burger-constructor_bottom-container__tknJ9\",\"order\":\"burger-constructor_order__12w1r\",\"icon\":\"burger-constructor_icon__2w9mw\",\"total\":\"burger-constructor_total__2Bwd5\",\"scroll-container\":\"burger-constructor_scroll-container__d5nix\",\"main-element\":\"burger-constructor_main-element__3CxQZ\",\"onHover\":\"burger-constructor_onHover__2tim-\",\"info\":\"burger-constructor_info__1fDuF\",\"text\":\"burger-constructor_text__3O3XZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__cYNP5\",\"content\":\"app-header_content__3hhck\",\"item\":\"app-header_item__3R9R6\",\"item__profile\":\"app-header_item__profile__QOhNS\",\"left\":\"app-header_left__32crU\",\"center\":\"app-header_center__29nM5\",\"right\":\"app-header_right__2kLRy\",\"active\":\"app-header_active__WFm6G\"};","import React, { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./app-header.module.css\";\r\nimport {\r\n  BurgerIcon,\r\n  ListIcon,\r\n  ProfileIcon,\r\n  Logo,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst AppHeader: FC = () => {\r\n  const location = useLocation();\r\n\r\n  const isActive = location.pathname === \"/profile\";\r\n\r\n  return (\r\n    <header className={`${styles.header} pt-4 pb-4`}>\r\n      <nav className={`${styles.content}`}>\r\n        <div className={`${styles.left} pl-5 mr-2`}>\r\n          <NavLink\r\n            className={styles.item + \" pl-5 pr-5 pt-4 pb-4\"}\r\n            exact\r\n            to=\"/\"\r\n            activeClassName={styles.active}\r\n          >\r\n            <BurgerIcon type=\"secondary\" />\r\n            <p className={\"text text_type_main-default ml-2 mr-5\"}>\r\n              Конструктор\r\n            </p>\r\n          </NavLink>\r\n          <NavLink\r\n            className={styles.item + \" pl-5 pr-5 pt-4 pb-4\"}\r\n            exact\r\n            to=\"/feed\"\r\n            activeClassName={styles.active}\r\n          >\r\n            <ListIcon type=\"secondary\" />\r\n            <p\r\n              className={\r\n                \"text text_type_main-default ml-2 mr-5 text_color_inactive\"\r\n              }\r\n            >\r\n              Лента заказов\r\n            </p>\r\n          </NavLink>\r\n        </div>\r\n        <NavLink className={styles.center} to=\"/\">\r\n          <Logo />\r\n        </NavLink>\r\n        <NavLink\r\n          className={styles.right + \" pl-5 pr-5 pt-4 pb-4\"}\r\n          to=\"/profile\"\r\n          exact\r\n          activeClassName={`${isActive && styles.active}`}\r\n        >\r\n          <ProfileIcon type=\"secondary\" />\r\n          <p className={\"text text_type_main-default ml-2 mr-5\"}>\r\n            Личный кабинет\r\n          </p>\r\n        </NavLink>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { AppDispatch, AppThunk, RootState } from './types'\r\n\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch | AppThunk>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React, { FC, useMemo } from \"react\";\r\nimport styles from \"./ingredient-item.module.css\";\r\nimport {\r\n  CurrencyIcon,\r\n  Counter,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../utils/hooks\";\r\nimport { useDrag } from 'react-dnd';\r\nimport { TIngredient } from '../../utils/types';\r\n\r\ntype TIngredientItemProps = {\r\n  info:  TIngredient;\r\n  onIngredientClick: (info: TIngredient) => void;\r\n}\r\n\r\nconst IngredientItem: FC<TIngredientItemProps> = ({ info, onIngredientClick }) => {\r\n  const addedIngredients = useAppSelector((state) => state.burgersConstructor.addedIngredients);\r\n\r\n  const [, dragRef] = useDrag(() => ({\r\n    type: 'ingredient',\r\n    item: { info } ,\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging()\r\n    })\r\n  }))\r\n\r\n  const currentCount = useMemo(() => {\r\n    return addedIngredients.filter((item) => item._id === info._id).length\r\n  }, [addedIngredients, info._id])\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Link\r\n      className={styles.content}\r\n      onClick={() => {\r\n        onIngredientClick(info);\r\n      }}\r\n      ref={dragRef}\r\n      to={{\r\n        pathname: `/ingredients/${info._id}`,\r\n        state: {background: location}\r\n      }}\r\n    >\r\n      <img className=\"mb-1\" src={info.image} alt={`ингредиент ${info.name}`} />\r\n      <span className={`text text_type_digits-default mb-1 ${styles.price}`}>\r\n        {info.price} <CurrencyIcon type=\"primary\" />\r\n      </span>\r\n      <span className={`${styles.caption} text text_type_main-default`}>\r\n        {info.name}\r\n      </span>\r\n      {currentCount ? <Counter count={currentCount} size={'default'}/> : null}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default IngredientItem;\r\n","import { TIngredient } from '../../utils/types';\r\nexport const DISPLAY_INGREDIENT_INFO = 'DISPLAY_INGREDIENT_INFO';\r\nexport const HIDE_INGREDIENT_INFO = 'HIDE_INGREDIENT_INFO';\r\n\r\ntype TDisplayIngredientInfoAction = {\r\n    type: typeof DISPLAY_INGREDIENT_INFO;\r\n    info: TIngredient;\r\n}\r\n\r\ntype THideIngredientInfoAction = {\r\n    type: typeof HIDE_INGREDIENT_INFO;\r\n}\r\n\r\nexport type TIngredientInfoActions = \r\nTDisplayIngredientInfoAction |\r\nTHideIngredientInfoAction\r\n","import { TIngredient, TTabNames } from '../../utils/types';\r\n\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT'; \r\nexport const DELETE_INGREDIENT = 'DELETE_ITEM';\r\nexport const SORT_INGREDIENTS = 'SORT_INGREDIENTS';\r\nexport const CLEAR_PREV_ORDER = 'CLEAR_PREV_ORDER';\r\nexport const CHANGE_ACTIVE_TAB = 'CHANGE_ACTIVE_TAB';\r\n\r\ntype TChangeActiveTab = {\r\n  type: typeof CHANGE_ACTIVE_TAB;\r\n  activeTab: TTabNames;\r\n}\r\n\r\n  type TClearPrevOrder = {\r\n    type: typeof CLEAR_PREV_ORDER;\r\n  }\r\n    \r\n  type TAddIngredientInOrderAction = {\r\n    type: typeof ADD_INGREDIENT;\r\n    ingredient: TIngredient;\r\n  }\r\n  \r\n  type TRemoveIgredientAction = {\r\n    type: typeof DELETE_INGREDIENT;\r\n    index: number;\r\n  }\r\n  \r\n  type TSortIngredientsAction = {\r\n    type: typeof SORT_INGREDIENTS;\r\n    dragIndex: number;\r\n    hoverIndex: number;\r\n  }\r\n  \r\n  export type TConstructorActions = \r\n    TClearPrevOrder |\r\n    TAddIngredientInOrderAction |\r\n    TRemoveIgredientAction |\r\n    TSortIngredientsAction | \r\n    TChangeActiveTab","import React, { FC } from \"react\";\r\n\r\ntype TLoaderSvgProps = {\r\n  color:  string;\r\n}\r\n\r\nexport const LoaderSvg: FC<TLoaderSvgProps> = ({ color = '#3C39EC' }) => {\r\n    return (\r\n      <svg\r\n        width={40}\r\n        height={40}\r\n        viewBox=\"0 0 38 38\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        stroke={color}\r\n      >\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <g transform=\"translate(1 1)\" strokeWidth=\"2\">\r\n            <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\r\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n              <animateTransform\r\n                attributeName=\"transform\"\r\n                type=\"rotate\"\r\n                from=\"0 18 18\"\r\n                to=\"360 18 18\"\r\n                dur=\"1s\"\r\n                repeatCount=\"indefinite\"\r\n              />\r\n            </path>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    );\r\n  };","import { LoaderSvg } from './loader.svg';\r\nimport React, { FC } from \"react\";\r\nimport style from './loader.module.css';\r\n\r\nexport const Loader: FC = () => {\r\n  const loaderColor = '#4C4CFF';\r\n\r\n  return (\r\n    <div className={style.wrapper} >\r\n      <LoaderSvg color={loaderColor}  />\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport styles from \"./ingredient-details.module.css\";\r\nimport { useAppSelector } from \"../../utils/hooks\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { TIngredient } from '../../utils/types';\r\n\r\nfunction IngredientDetails() {\r\n  const { selectedIngredient } = useAppSelector((state) => state.ingredientInfo);\r\n\r\n  const { ingredients } = useAppSelector((state) => state.burgerIngredientsData);\r\n  \r\n  const { id } = useParams<{id: string}>();\r\n  \r\n  const info = selectedIngredient\r\n    ? selectedIngredient\r\n    : ingredients.find((item: TIngredient) => item._id === id);\r\n\r\n  if (!ingredients.length) return null;\r\n\r\n  if (!info) {\r\n    return <Redirect to=\"/notfound\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={`mb-15 ${styles.content}`}>\r\n      <div className={`mb-4 ${styles.image_wrapper}`}>\r\n        <img src={info.image_large} alt={info.name} />\r\n      </div>\r\n      <span className={`mb-8 text text_type_main-medium`}>{info.name}</span>\r\n      <div className={styles.nutrition}>\r\n        <div className={styles.item}>\r\n          <span className={`text text_type_main-default text_color_inactive`}>\r\n            Калории,ккал\r\n          </span>\r\n          <span className={`text text_type_digits-default text_color_inactive`}>\r\n            {info.calories}\r\n          </span>\r\n        </div>\r\n        <div className={styles.item}>\r\n          <span className={`text text_type_main-default text_color_inactive`}>\r\n            Белки, г\r\n          </span>\r\n          <span className={`text text_type_digits-default text_color_inactive`}>\r\n            {info.proteins}\r\n          </span>\r\n        </div>\r\n        <div className={styles.item}>\r\n          <span className={`text text_type_main-default text_color_inactive`}>\r\n            Жиры, г\r\n          </span>\r\n          <span className={`text text_type_digits-default text_color_inactive`}>\r\n            {info.fat}\r\n          </span>\r\n        </div>\r\n        <div className={styles.item}>\r\n          <span className={`text text_type_main-default text_color_inactive`}>\r\n            Углеводы, г\r\n          </span>\r\n          <span className={`text text_type_digits-default text_color_inactive`}>\r\n            {info.carbohydrates}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IngredientDetails;\r\n","import React, {FC} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./modal-overlay.module.css\";\r\n\r\ntype TModalOverlayProps = {\r\n    onModalHideClick: () => void;\r\n}\r\n\r\nconst ModalOverlay: FC<TModalOverlayProps> = ({ onModalHideClick }) => {\r\n  \r\n  return ReactDOM.createPortal(\r\n    <div className={styles.overlay} onClick={onModalHideClick}></div>,\r\n    document.body\r\n  );\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import React, { FC } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./modal.module.css\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nconst modalRoot = document.getElementById(\"react-modals\");\r\n\r\ntype TModalProps = {\r\n  title:  string;\r\n  onModalHideClick: () => void;\r\n}\r\n\r\nconst Modal: FC<TModalProps> = ({ title, children, onModalHideClick }) => {\r\n   \r\n  React.useEffect(() => {\r\n    function handleEscClose(evt: globalThis.KeyboardEvent) {\r\n      if (evt.key === \"Escape\") {\r\n        onModalHideClick();\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", handleEscClose);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscClose);\r\n    };\r\n  });\r\n\r\n  return modalRoot ? ReactDOM.createPortal(\r\n    <div>\r\n      <ModalOverlay onModalHideClick={onModalHideClick} />\r\n      <div className={styles.popup}>\r\n        <div>\r\n          <div className={`ml-10 mr-10 ${styles.container}`}>\r\n            <div className={`text text_type_main-large ${styles.title}`}>\r\n              {title}\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className={styles[\"close-icon\"]}\r\n              onClick={onModalHideClick}\r\n            >\r\n              <CloseIcon type=\"primary\" />\r\n            </button>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  ) : null;\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport IngredientItem from \"../ingredient-item/ingredient-item\";\r\nimport styles from \"./burger-ingredients.module.css\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\nimport {\r\n  DISPLAY_INGREDIENT_INFO,\r\n  HIDE_INGREDIENT_INFO,\r\n} from \"../../services/actions/ingredient-details\";\r\nimport { CHANGE_ACTIVE_TAB } from \"../../services/actions/burgers-constructor\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Loader } from \"../ui/loader/loader\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport Modal from \"../modal/modal\";\r\nimport { TIngredient } from \"../../utils/types\";\r\n\r\nfunction BurgerIngredients() {\r\n  const bunRef = useRef<HTMLDivElement>(null),\r\n    sauceRef = useRef<HTMLDivElement>(null),\r\n    mainRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [popupOpen, setPopupOpen] = React.useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { ingredients, itemsRequest, itemsFailed } = useAppSelector(\r\n    (state) => state.burgerIngredientsData\r\n  );\r\n\r\n  const { currentTab } = useAppSelector((state) => state.burgersConstructor);\r\n\r\n  const onIngredientClick = (info: TIngredient) => {\r\n    if (popupOpen) return;\r\n    setPopupOpen(true);\r\n    dispatch({ type: DISPLAY_INGREDIENT_INFO, info });\r\n  };\r\n\r\n  const onModalHideClick = () => {\r\n    setPopupOpen(false);\r\n    dispatch({ type: HIDE_INGREDIENT_INFO });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ingredientCont: HTMLElement | null =\r\n      document.getElementById(\"ingredientCont\");\r\n    const listenScrollEvent = () => {\r\n      const tabs: HTMLElement | null = document.getElementById(\"tabs\");\r\n      const buns: HTMLElement | null = document.getElementById(\"buns\");\r\n      const sauces: HTMLElement | null = document.getElementById(\"sauces\");\r\n      const main: HTMLElement | null = document.getElementById(\"main\");\r\n\r\n      const isShouldChangeActiveTab = (block: HTMLElement | null) => {\r\n        if (tabs === null || block === null) {\r\n          return;\r\n        }\r\n        return (\r\n          block.getBoundingClientRect().top - 150 <=\r\n          tabs.getBoundingClientRect().bottom\r\n        );\r\n      };\r\n\r\n      if (isShouldChangeActiveTab(buns)) {\r\n        const activeTab = \"buns\";\r\n        dispatch({ type: CHANGE_ACTIVE_TAB, activeTab });\r\n      }\r\n      if (isShouldChangeActiveTab(sauces)) {\r\n        const activeTab = \"sauces\";\r\n        dispatch({ type: CHANGE_ACTIVE_TAB, activeTab });\r\n      }\r\n      if (isShouldChangeActiveTab(main)) {\r\n        const activeTab = \"main\";\r\n        dispatch({ type: CHANGE_ACTIVE_TAB, activeTab });\r\n      }\r\n    };\r\n\r\n    ingredientCont?.addEventListener(\"scroll\", listenScrollEvent);\r\n\r\n    return () =>\r\n      ingredientCont?.removeEventListener(\"scroll\", listenScrollEvent);\r\n  }, [dispatch]);\r\n\r\n  const handleTab =\r\n    (value: string, ref: typeof bunRef | typeof sauceRef | typeof mainRef) =>\r\n    () => {\r\n      dispatch({ type: CHANGE_ACTIVE_TAB, value });\r\n      if (!ref.current) {\r\n        return null;\r\n      }\r\n      if (bunRef.current && sauceRef.current && mainRef.current) {\r\n        ref.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div className={`${styles.types} `}>\r\n      <div className={`${styles.tabs} mt-5 mb-10`} id=\"tabs\">\r\n        <Tab\r\n          value=\"buns\"\r\n          active={currentTab === \"buns\"}\r\n          onClick={handleTab(\"buns\", bunRef)}\r\n        >\r\n          Булки\r\n        </Tab>\r\n        <Tab\r\n          value=\"sauces\"\r\n          active={currentTab === \"sauces\"}\r\n          onClick={handleTab(\"sauces\", sauceRef)}\r\n        >\r\n          Соусы\r\n        </Tab>\r\n        <Tab\r\n          value=\"main\"\r\n          active={currentTab === \"main\"}\r\n          onClick={handleTab(\"main\", mainRef)}\r\n        >\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n\r\n      <div className={styles.container} id=\"ingredientCont\">\r\n        {itemsRequest ? (\r\n          <Loader />\r\n        ) : itemsFailed ? (\r\n          <p className=\"text text_type_main-medium\">\r\n            Произошла ошибка. Перезагрузите браузер.\r\n          </p>\r\n        ) : (\r\n          <>\r\n            <section\r\n              className={`${styles.content} mb-10`}\r\n              id=\"buns\"\r\n              ref={bunRef}\r\n            >\r\n              <h2 className=\"text text_type_main-medium mb-6\">Булки</h2>\r\n              <div className={styles.list}>\r\n                {ingredients\r\n                  .filter((item: TIngredient) => item.type === \"bun\")\r\n                  .map((item: TIngredient) => (\r\n                    <IngredientItem\r\n                      info={item}\r\n                      key={item._id}\r\n                      onIngredientClick={onIngredientClick}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            </section>\r\n            <section\r\n              className={`${styles.content} mb-10`}\r\n              id=\"sauces\"\r\n              ref={sauceRef}\r\n            >\r\n              <h2 className=\"text text_type_main-medium mb-6\">Соусы</h2>\r\n              <div className={styles.list}>\r\n                {ingredients\r\n                  .filter((item: TIngredient) => item.type === \"sauce\")\r\n                  .map((item: TIngredient) => (\r\n                    <IngredientItem\r\n                      info={item}\r\n                      key={item._id}\r\n                      onIngredientClick={onIngredientClick}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            </section>\r\n            <section\r\n              className={`${styles.content} mb-10`}\r\n              id=\"main\"\r\n              ref={mainRef}\r\n            >\r\n              <h2 className=\"text text_type_main-medium mb-6\">\r\n                Основные ингредиенты\r\n              </h2>\r\n              <div className={styles.list}>\r\n                {ingredients\r\n                  .filter((item: TIngredient) => item.type === \"main\")\r\n                  .map((item: TIngredient) => (\r\n                    <IngredientItem\r\n                      info={item}\r\n                      key={item._id}\r\n                      onIngredientClick={onIngredientClick}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </div>\r\n      {popupOpen && (\r\n        <Modal title=\"Детали ингредиента\" onModalHideClick={onModalHideClick}>\r\n          <IngredientDetails />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerIngredients;\r\n","import React, { FC, useRef } from \"react\";\r\nimport styles from \"./burger-constructor-main-element.module.css\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { SORT_INGREDIENTS } from '../../services/actions/burgers-constructor';\r\nimport { TIngredient } from '../../utils/types';\r\nimport { useAppDispatch } from \"../../utils/hooks\";\r\ntype TMainElementProps = {\r\n  item:  TIngredient;\r\n  index: number;\r\n  deleteIngredient: (index: number) => void;\r\n}\r\n\r\nconst BurgerConstructorMainElement: FC<TMainElementProps> = ({ item, index, deleteIngredient }) => {\r\nconst dispatch = useAppDispatch();\r\nconst ref = useRef(null);\r\n\r\nconst [ { isDragging }, drag] = useDrag({\r\n    type: 'main',\r\n    item: () => {\r\n      return { index };\r\n    },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    })\r\n  })\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'main',\r\n    collect: monitor => ({\r\n      isHovered: monitor.isOver()\r\n    }),\r\n    hover(item: {index: number}, monitor) {\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (!ref.current)\r\n        return;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex)\r\n        return;\r\n\r\n      dispatch({ type: SORT_INGREDIENTS, dragIndex, hoverIndex})\r\n      \r\n      item.index = hoverIndex;\r\n    }\r\n  })\r\n\r\n  drag(drop(ref))\r\n\r\n  return (\r\n    <div ref={ref} key={index} className={styles[\"main-element\"]}  >\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement\r\n        text={item.name}\r\n        price={item.price}\r\n        thumbnail={item.image}\r\n        handleClose={() => deleteIngredient(index)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerConstructorMainElement;\r\n","export const setCookie = (name: string, value: string, props: { [key: string]: {} } & { expires?: number | Date | string } = {}) => {\r\n  props = {\r\n    path: '/',\r\n    ...props,\r\n  };\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && (exp as Date).toUTCString) {\r\n    props.expires = (exp as Date).toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n};\r\n  \r\n  export function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n  }\r\n\r\n  export const getToken = (fullString: string) => {\r\n    return fullString.replace(/Bearer\\s+/g, '')\r\n  }\r\n\r\n  export const deleteCookie = (name: string) => {\r\n    setCookie(name, '', { expires: -1 });\r\n  };","export const BASE_URL = \"https://norma.nomoreparties.space/api\";\r\nexport const ORDERS_URL = \"wss://norma.nomoreparties.space/orders/all\"; \r\nexport const USER_ORDERS_URL = 'wss://norma.nomoreparties.space/orders';\r\n","import { getCookie } from \"./cookies\";\r\nimport { BASE_URL } from \"./constants\";\r\n\r\nconst INGREDIENTS_URL = `${BASE_URL}/ingredients`;\r\nconst ORDER_URL = `${BASE_URL}/orders`;\r\n\r\nexport function getIngredients() {\r\n  return fetch(INGREDIENTS_URL).then((res) => {\r\n    if (res.ok) return res.json();\r\n\r\n    return Promise.reject(res.status);\r\n  });\r\n}\r\n\r\nexport function getOrder(ingredientsId: Array<string>) {\r\n  const data = { ingredients: ingredientsId };\r\n  return fetch(ORDER_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(\"accessToken\"),\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then((res) => {\r\n    // if (res.ok)\r\n    //   return res.json()\r\n    //   console.log(res)\r\n\r\n    // return Promise.reject(res.status)\r\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n  });\r\n}\r\n","import { getCookie } from \"./cookies\";\r\nimport { BASE_URL } from \"./constants\";\r\n\r\nconst REGISTRATION_ADDRESS = `${BASE_URL}/auth/register`;\r\nconst LOGIN_ADDRESS = `${BASE_URL}/auth/login`;\r\nconst GET_USER_ADDRESS = `${BASE_URL}/auth/user`;\r\nconst LOGOUT_ADDRESS = `${BASE_URL}/auth/logout`;\r\nconst REFRESH_TOKEN_ADDRESS = `${BASE_URL}/auth/token`;\r\nconst PASSWORD_RESET_ADDRESS = `${BASE_URL}/password-reset`;\r\nconst SET_NEW_PASSWORD = `${BASE_URL}/password-reset/reset`;\r\nconst ORDER_ADDRESS = `${BASE_URL}/orders`;\r\n\r\nconst checkResponse = (res: Response) => {\r\n  return res.ok\r\n    ? res.json()\r\n    : res.json().then((err: any) => Promise.reject(err));\r\n};\r\n\r\nexport function getOrderInfo(orderNumber: string) {\r\n  return (\r\n    fetch(`${ORDER_ADDRESS}/${orderNumber}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(res => checkResponse(res))\r\n  )\r\n}\r\n\r\nexport function registration(name: string, email: string, password: string) {\r\n  return fetch(REGISTRATION_ADDRESS, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password, name }),\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n\r\nexport function login(email: string, password: string) {\r\n  return fetch(LOGIN_ADDRESS, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then(res => checkResponse(res))\r\n\r\n}\r\n\r\nexport function getUserInfo() {\r\n  return fetch(GET_USER_ADDRESS, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      Authorization: \"Bearer \" + getCookie(\"accessToken\"),\r\n    },\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n\r\nexport function logOut() {\r\n  return fetch(LOGOUT_ADDRESS, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      token: localStorage.getItem(\"refreshToken\"),\r\n    }),\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n\r\nexport const refreshToken = () => {\r\n  return fetch(REFRESH_TOKEN_ADDRESS, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    body: JSON.stringify({\r\n      token: localStorage.getItem(\"refreshToken\"),\r\n    }),\r\n  })\r\n  .then(res => checkResponse(res))\r\n}\r\n\r\n\r\n\r\nexport function updateUser(name: string, email: string, password: string) {\r\n  return fetch(GET_USER_ADDRESS, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(\"accessToken\"),\r\n    },\r\n    body: JSON.stringify({ name, email, password }),\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n\r\nexport function forgotPassword(email: string) {\r\n  return fetch(PASSWORD_RESET_ADDRESS, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email }),\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n\r\nexport function setNewPassword(password: string, token: string) {\r\n  return fetch(SET_NEW_PASSWORD, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ password, token })\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n","import {\r\n  registration,\r\n  login,\r\n  logOut,\r\n  getUserInfo,\r\n  refreshToken,\r\n  updateUser,\r\n  forgotPassword,\r\n  setNewPassword,\r\n} from \"../../utils/api-requests\";\r\nimport { TUserInfoResponse, AppDispatch, AppThunk } from '../../utils/types'\r\nimport { setCookie, getToken, deleteCookie } from \"../../utils/cookies\";\r\nimport { History } from \"history\";\r\nexport const GET_USER_REQUEST = \"GET_USER_REQUEST\";\r\nexport const SET_USER_INFO = \"SET_USER_INFO\";\r\nexport const REMOVE_USER_INFO = \"REMOVE_USER_INFO\";\r\nexport const RESPONSED_EMAIL = \"RESPONSED_EMAIL\";\r\nexport const SET_LOGIN_REQUEST_ERROR = \"SET_LOGIN_REQUEST_ERROR\";\r\nexport const SET_REGISTER_REQUEST_ERROR = \"SET_REGISTER_REQUEST_ERROR\";\r\nexport const SET_LOGOUT_REQUEST_ERROR = \"SET_LOGOUT_REQUEST_ERROR\";\r\nexport const REFRESH_TOKEN_REQUEST = \"REFRESH_TOKEN_REQUEST\";\r\nexport const REFRESH_TOKEN_SUCCESS = \"REFRESH_TOKEN_SUCCESS\";\r\nexport const REFRESH_TOKEN_ERROR = \"REFRESH_TOKEN_ERROR\";\r\n\r\nexport interface IApiResponse {\r\n  success?: boolean;\r\n}\r\n\r\nconst setAuth = (res: TUserInfoResponse, dispatch: AppDispatch) => {\r\n  setCookie(\"accessToken\", getToken(res.accessToken), { expires: 'Fri, 31 Dec 9999 23:59:59 GMT' }); //, { expires: 'Fri, 31 Dec 9999 23:59:59 GMT' }\r\n  localStorage.setItem(\"refreshToken\", getToken(res.refreshToken));\r\n  dispatch({ type: SET_USER_INFO, user: res.user });\r\n};\r\n\r\nexport const registerUser = (name: string, email: string, password: string) => (dispatch: AppDispatch) => {\r\n  registration(name, email, password)\r\n    .then((res) => {\r\n      if (res.success === true) {\r\n        setAuth(res, dispatch);\r\n        return;\r\n      }\r\n      return Promise.reject(res);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: SET_REGISTER_REQUEST_ERROR,\r\n        message: `Ошибка регистрации: ${err.message}`,\r\n      })\r\n    );\r\n};\r\n\r\nexport const loginUser = (email: string, password: string) => (dispatch: AppDispatch) => {\r\n  login(email, password)\r\n    .then((res) => {\r\n      // console.log(res);\r\n      if (res.success === true) {\r\n        setAuth(res, dispatch);\r\n        return;\r\n      }\r\n\r\n      return Promise.reject(res);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: SET_LOGIN_REQUEST_ERROR,\r\n        message: `Ошибка авторизации: ${err.message}`,\r\n      })\r\n    );\r\n};\r\n\r\nexport const logout = (history: string[] | History<unknown>) => (dispatch: AppDispatch) => {\r\n  logOut()\r\n    .then((res) => {\r\n      if (res.success === true) {\r\n        localStorage.removeItem(\"refreshToken\");\r\n        setCookie(\"accessToken\", \"\", { expires: 0 });\r\n        dispatch({ type: REMOVE_USER_INFO });\r\n        history.push(\"/login\");\r\n        return;\r\n      } else {\r\n        history.push(\"/profile\");\r\n        // console.log(res.message);\r\n        return Promise.reject(res);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_LOGOUT_REQUEST_ERROR,\r\n        message: `Ошибка сервера ${err.message}`,\r\n      });\r\n      history.push(\"/profile\");\r\n    });\r\n};\r\n\r\nexport const updateToken: AppThunk = () => (dispatch) => {\r\n  dispatch({ type: REFRESH_TOKEN_REQUEST });\r\n  refreshToken()\r\n    .then((data) => {\r\n      setCookie(\"accessToken\", getToken(data.accessToken), { expires: 'Fri, 31 Dec 9999 23:59:59 GMT' });\r\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\r\n      dispatch({ type: REFRESH_TOKEN_SUCCESS });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: REFRESH_TOKEN_ERROR });\r\n    });\r\n};\r\n\r\nexport const getUser: AppThunk = () => (dispatch: AppDispatch) => {\r\n  getUserInfo()\r\n    .then((res) => {\r\n      // console.log(res)\r\n      if (res.success === true) {\r\n        dispatch({\r\n          type: SET_USER_INFO,\r\n          user: res.user,\r\n        });\r\n        return;\r\n      }\r\n      return Promise.reject(res);\r\n    })\r\n    .catch((err) => {\r\n      if (err.message === \"jwt expired\" || err.message === \"Token is invalid\") {\r\n        dispatch(updateToken() as any);\r\n      }\r\n      console.log(err);\r\n      deleteCookie('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n    });\r\n};\r\n\r\nexport const updateUserInfo = (name: string, email: string, password: string) => (dispatch: AppDispatch) => {\r\n  updateUser(name, email, password)\r\n    .then((res) => {\r\n      //console.log(res)\r\n      if (res.success === true) {\r\n        dispatch({\r\n          type: SET_USER_INFO,\r\n          user: res.user,\r\n        });\r\n        return;\r\n      }\r\n\r\n      return Promise.reject(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.message === \"jwt expired\" || err.message === \"jwt malformed\") {\r\n        dispatch(updateToken() as any);\r\n        return;\r\n      }\r\n    });\r\n};\r\n\r\nexport const passwordReset = (email: string, history: string[] | History<unknown>) => (dispatch: (arg0: { type: string; }) => void) => {\r\n  forgotPassword(email)\r\n    .then((res) => {\r\n      if (res.success === true) {\r\n        dispatch({\r\n          type: RESPONSED_EMAIL,\r\n        });\r\n        history.push(\"/reset-password\");\r\n        return;\r\n      }\r\n\r\n      return Promise.reject(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const setNewPasswordValue = (password: string, token: string, history: string[] | History<unknown>) => (dispatch: any) => {\r\n  setNewPassword(password, token)\r\n    .then((res) => {\r\n      if (res.success === true) {\r\n        // console.log(res);\r\n        history.push(\"/login\");\r\n        return;\r\n      }\r\n\r\n      return Promise.reject(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\ntype TRefreshTokenSuccess = {\r\n  type: typeof REFRESH_TOKEN_SUCCESS;\r\n}\r\n\r\ntype TRefreshTokenError = {\r\n  type: typeof REFRESH_TOKEN_ERROR;\r\n}\r\n\r\ntype TRefreshTokenReQuest = {\r\n  type: typeof REFRESH_TOKEN_REQUEST;\r\n}\r\n\r\ntype TGetUserRequestAction = {\r\n  type: typeof GET_USER_REQUEST;\r\n}\r\n\r\ntype TSetUserInfoAction = {\r\n  type: typeof SET_USER_INFO;\r\n  user: { name: string; email: string };\r\n}\r\n\r\ntype TRemoveUserInfoAction = {\r\n  type: typeof REMOVE_USER_INFO;\r\n}\r\n\r\ntype TResponsedEmailAction = {\r\n  type: typeof RESPONSED_EMAIL;\r\n}\r\n\r\ntype TSetLoginRequestErrorAction = {\r\n  type: typeof SET_LOGIN_REQUEST_ERROR;\r\n  message: string;\r\n}\r\n\r\ntype TSetRegisterRequestErrorAction = {\r\n  type: typeof SET_REGISTER_REQUEST_ERROR;\r\n  message: string;\r\n}\r\n\r\ntype TSetLogOutRequestErrorAction = {\r\n  type: typeof SET_LOGOUT_REQUEST_ERROR;\r\n  message: string;\r\n}\r\n\r\nexport type TUserInfoAction = TGetUserRequestAction |\r\n  TSetUserInfoAction | TRemoveUserInfoAction |\r\n  TResponsedEmailAction | TSetLoginRequestErrorAction |\r\n  TSetRegisterRequestErrorAction | TSetLogOutRequestErrorAction | TRefreshTokenReQuest | TRefreshTokenError | TRefreshTokenSuccess\r\n","import { getOrder } from '../../utils/api';\r\nimport { updateToken } from './user-info';\r\nimport { AppDispatch, TOrder, AppThunk } from '../../utils/types';\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_REQUEST = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED';\r\nexport const HIDE_ORDER_INFO = 'HIDE_ORDER_INFO';\r\n\r\ntype TGetOrderSuccess = {\r\n  type: typeof GET_ORDER_SUCCESS;\r\n  order: TOrder;\r\n}\r\n\r\ntype TGetOrderRequest = {\r\n  type: typeof GET_ORDER_REQUEST;\r\n}\r\n\r\ntype TGetOrderFailed = {\r\n  type: typeof GET_ORDER_FAILED;\r\n}\r\n\r\ntype THideOrderInfo = {\r\n  type: typeof HIDE_ORDER_INFO;\r\n}\r\n\r\nexport type TOrderActions =\r\n  TGetOrderSuccess |\r\n  TGetOrderRequest | TGetOrderFailed | THideOrderInfo\r\n\r\nexport const getOrderNumber: AppThunk = (ingredients: string[]) => (dispatch: AppDispatch) => {\r\n  dispatch({ type: GET_ORDER_REQUEST });\r\n  getOrder(ingredients)\r\n    .then(res => dispatch({ type: GET_ORDER_SUCCESS, order: res.order }))\r\n    .catch(err => {\r\n      if (err.message === \"jwt expired\") {\r\n        dispatch(updateToken() as any);\r\n        return;\r\n      }\r\n      dispatch({ type: GET_ORDER_FAILED })\r\n    })\r\n}\r\n","export default __webpack_public_path__ + \"static/media/graphics.95470a5b.png\";","import React, { FC } from \"react\";\r\nimport styles from \"./order-details.module.css\";\r\nimport DoneIcon from \"../../images/graphics.png\";\r\nimport { useAppSelector } from \"../../utils/hooks\";\r\nimport { Loader } from \"../ui/loader/loader\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst OrderDetails: FC = () => {\r\n  \r\nconst { numberOrder, orderRequest, orderRequestFaild } = useAppSelector((state) => state.order)\r\nconst { userUnfo } = useAppSelector((store) => store.userInfo);\r\n\r\nif (!userUnfo.email)\r\n    return <Redirect to='/login'/>\r\n    \r\n  return (\r\n    <div className={`mb-15 ${styles.container}`}>\r\n      { orderRequest ? <Loader /> :\r\n\r\n      ( orderRequestFaild ? (\r\n          <p className=\"text text_type_main-medium\">Произошла ошибка. Попробуйте ещё раз.</p>\r\n        ) : (<>\r\n      <span className=\"text text_type_digits-large mb-8\">{numberOrder?.number}</span> \r\n    \r\n      <span className=\"text text_type_main-medium mb-15\">\r\n        Идентификатор заказа\r\n      </span>\r\n      <img\r\n        src={DoneIcon}\r\n        className={`mb-15 ${styles.image}`}\r\n        alt=\"иконка готовности\"\r\n      />\r\n      <span className=\"text text_type_main-default  mb-2\">\r\n        Ваш заказ начали готовить\r\n      </span>\r\n      <span className=\"text text_type_main-small text_color_inactive mb-30\">\r\n        Дождитесь готовности на орбитальной станции\r\n      </span>\r\n      </>) )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderDetails;\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./burger-constructor.module.css\";\r\nimport BurgerConstructorMainElement from \"../burger-constructor-main-element/burger-constructor-main-element\";\r\nimport {\r\n  ADD_INGREDIENT,\r\n  DELETE_INGREDIENT,\r\n  CLEAR_PREV_ORDER,\r\n} from \"../../services/actions/burgers-constructor\";\r\nimport { HIDE_ORDER_INFO } from \"../../services/actions/order-details\";\r\nimport { getOrderNumber } from \"../../services/actions/order-details\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport Modal from \"../modal/modal\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { TIngredient } from \"../../utils/types\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\n\r\nconst BurgerConstructor: FC = () => {\r\n  const [orderDetailsModal, setOrderDetailsModal] = React.useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const { addedIngredients } = useAppSelector((state) => state.burgersConstructor);\r\n\r\n  const allItemsId = addedIngredients.map((item: TIngredient) => item?._id);\r\n\r\n  const orderDetailsModalClick = (allItemsId: string[]) => {\r\n    if (orderDetailsModal) return;\r\n    setOrderDetailsModal(true);\r\n    dispatch(getOrderNumber(allItemsId));\r\n  };\r\n\r\n  const onModalHideClick = () => {\r\n    setOrderDetailsModal(false);\r\n    dispatch({ type: HIDE_ORDER_INFO });\r\n    dispatch({ type: CLEAR_PREV_ORDER });\r\n  };\r\n\r\n  const deleteIngredient = (index: number) => {\r\n    dispatch({ type: DELETE_INGREDIENT, index });\r\n  };\r\n\r\n  const [{ isHover }, dropTarget] = useDrop({\r\n    accept: \"ingredient\",\r\n    drop(item: { info: TIngredient }) {\r\n      dispatch({ type: ADD_INGREDIENT, ingredient: item.info });\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  const totalSum = useMemo(() => {\r\n    return addedIngredients.reduce((prev: any, item: { price: number; }) => {\r\n      return prev + item.price;\r\n    }, 0);\r\n  }, [addedIngredients]);\r\n\r\n  const bun = React.useMemo(() => {\r\n    return addedIngredients.find((item: { type: string; }) => item.type === \"bun\");\r\n  }, [addedIngredients]);\r\n\r\n  return (\r\n    <div\r\n      ref={dropTarget}\r\n      className={`${styles.constructor} pt-13 pl-10 \r\n    ${isHover && styles.onHover}`}\r\n    >\r\n      {addedIngredients.length ? (\r\n        <div className={styles.container}>\r\n          <div className={`${styles[\"top-container\"]}`}>\r\n            {bun && (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  gap: \"16px\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <ConstructorElement\r\n                  type=\"top\"\r\n                  isLocked={true}\r\n                  text={bun.name + \" (верх)\"}\r\n                  price={bun.price}\r\n                  thumbnail={bun.image}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={styles[\"scroll-container\"]}>\r\n            {addedIngredients.map((item: TIngredient, index: number) => {\r\n              if (item.type !== \"bun\") {\r\n                return (\r\n                  <BurgerConstructorMainElement\r\n                    key={index}\r\n                    index={index}\r\n                    item={item}\r\n                    deleteIngredient={deleteIngredient}\r\n                  />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </div>\r\n          <div className={styles[\"bottom-container\"]}>\r\n            {bun && (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  gap: \"16px\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <ConstructorElement\r\n                  type=\"bottom\"\r\n                  isLocked={true}\r\n                  text={bun.name + \" (низ)\"}\r\n                  price={bun.price}\r\n                  thumbnail={bun.image}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.info}>\r\n          <p\r\n            className={`${styles.text} text text_type_main-default text_color_inactive`}\r\n          >\r\n            Переместите сюда ингредиенты для бургера\r\n          </p>\r\n          <p\r\n            className={`${styles.text} text text_type_main-default text_color_inactive`}\r\n          >\r\n            Для оформления заказа нужно обязательно выбрать тип булки.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className={`${styles.order} mr-4 mt-10`}>\r\n        <div className={`text mr-10 ${styles.total}`}>\r\n          <p className=\"text text_type_digits-medium\">{totalSum}</p>\r\n\r\n          <CurrencyIcon type={\"primary\"} />\r\n        </div>\r\n\r\n        {bun && (\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"medium\"\r\n            onClick={() => orderDetailsModalClick(allItemsId)}\r\n          >\r\n            Оформить заказ\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {orderDetailsModal && (\r\n        <Modal title=\"\" onModalHideClick={onModalHideClick}>\r\n          <OrderDetails />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import React from \"react\";\r\nimport styles from \"./main.module.css\";\r\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nfunction Main() {\r\n  \r\n  return (\r\n    <main className={` ${styles.main} pt-10`}>\r\n      <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <div className={styles.content}>\r\n            <BurgerIngredients />\r\n            <BurgerConstructor />\r\n          </div>\r\n        </DndProvider>\r\n      \r\n      \r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from '../../components/main/main';\r\n\r\nfunction HomePage() {\r\n  \r\n  return (\r\n    <Main /> \r\n  )\r\n}\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { NavLink, Redirect, useLocation } from \"react-router-dom\";\r\nimport styles from \"./login-page.module.css\";\r\nimport { SET_LOGIN_REQUEST_ERROR } from \"../../services/actions/user-info\";\r\nimport { loginUser } from \"../../services/actions/user-info\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\n\r\nfunction LoginPage() {\r\n  const { userUnfo, loginError } = useAppSelector((store) => store.userInfo);\r\n  const location = useLocation<{from: string}>();\r\n  const dispatch = useAppDispatch();\r\n  const [emailValue, setEmail] = useState(\"\");\r\n  const [passwordValue, setPassword] = useState(\"\");\r\n  \r\n  const handleLoginSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(emailValue, passwordValue));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_LOGIN_REQUEST_ERROR });\r\n  }, [dispatch]);\r\n\r\n  if (userUnfo.email) return <Redirect to={location.state?.from || \"/\"} />;\r\n\r\n  return (\r\n    <form className={styles.content} onSubmit={handleLoginSubmit}>\r\n      <h1 className=\"text text_type_main-medium\">Вход</h1>\r\n      <Input\r\n        type=\"email\"\r\n        placeholder=\"E-mail\"\r\n        name=\"email\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        value={emailValue}\r\n        size={\"default\"}\r\n      />\r\n      <PasswordInput\r\n        name=\"password\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        value={passwordValue}\r\n      />\r\n      <Button type=\"primary\" size=\"medium\">\r\n        Войти\r\n      </Button>\r\n      {loginError ? (\r\n        <p className={`${styles.error} text text_type_main-default mt-10`}>\r\n          {loginError}\r\n        </p>\r\n      ) : null}\r\n      <p className=\"text text_type_main-default text_color_inactive mt-20\">\r\n        Вы новый пользователь?{\" \"}\r\n        <NavLink className={styles.link} to=\"/register\">\r\n          Зарегистрироваться\r\n        </NavLink>\r\n      </p>\r\n      <p className=\"text text_type_main-default text_color_inactive mt-4\">\r\n        Забыли пароль?{\" \"}\r\n        <NavLink className={styles.link} to=\"/forgot-password\">\r\n          Восстановить пароль\r\n        </NavLink>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport styles from './registration-page.module.css';\r\nimport { registerUser } from '../../services/actions/user-info';\r\nimport { SET_REGISTER_REQUEST_ERROR } from \"../../services/actions/user-info\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\n\r\nfunction RegistrationPage() {\r\n  const { userUnfo, registerError } = useAppSelector((store) => store.userInfo);\r\n  const dispatch = useAppDispatch();\r\n  const [emailValue, setEmail] = useState('');\r\n  const [nameValue, setName] = useState('');\r\n  const [passwordValue, setPassword] = useState('');\r\n\r\n  const handleRegisterSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(registerUser(nameValue, emailValue, passwordValue))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_REGISTER_REQUEST_ERROR })\r\n  }, [dispatch]);\r\n\r\n  if (userUnfo.email)\r\n    return <Redirect to='/' exact={true}/>\r\n\r\n  return (\r\n    <form className={styles.content} onSubmit={handleRegisterSubmit}>\r\n      <h1 className='text text_type_main-medium'>Регистрация</h1>\r\n      <Input\r\n        type='text'\r\n        placeholder='Имя'\r\n        name='name'\r\n        onChange={e => setName(e.target.value)}\r\n        value={nameValue}\r\n        size={'default'}\r\n      />\r\n      <Input\r\n        type='email'\r\n        placeholder='E-mail'\r\n        name='email'\r\n        onChange={e => setEmail(e.target.value)}\r\n        value={emailValue}\r\n        />\r\n      <PasswordInput\r\n        name='password'\r\n        onChange={e => setPassword(e.target.value)}\r\n        value={passwordValue}\r\n      />\r\n      <Button type='primary' size='medium'>Зарегистрироваться</Button>\r\n      <p className='text text_type_main-default text_color_inactive mt-20'>\r\n      Уже зарегистрированы? <NavLink className={styles.link} to='/login'>Войти</NavLink>\r\n      </p>\r\n      {registerError\r\n        ? <p className={`${styles.error} text text_type_main-default mt-10`}>\r\n            {registerError}\r\n          </p>\r\n        : null\r\n      }\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default RegistrationPage;","import React, { useState } from 'react';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './forgot-password.module.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { passwordReset } from '../../services/actions/user-info';\r\nimport { useAppDispatch } from \"../../utils/hooks\";\r\n\r\nfunction ForgotPassword() {\r\n  const history = useHistory()\r\n  const [emailValue, setEmail] = useState('');\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handlePasswordSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(passwordReset(emailValue, history))\r\n  }\r\n  \r\n  return (\r\n    <form className={styles.content} onSubmit={handlePasswordSubmit}>\r\n      <h1 className='text text_type_main-medium'>Восстановление пароля</h1>\r\n      <Input\r\n        type='email'\r\n        placeholder='Укажите e-mail'\r\n        name='email'\r\n        onChange={e => setEmail(e.target.value)}\r\n        value={emailValue}\r\n        size={'default'}\r\n      />\r\n    <Button type='primary' size='medium'>Восстановить</Button>\r\n      <p className='text text_type_main-default text_color_inactive mt-20'>\r\n      Вспомнили пароль? <NavLink className={styles.link} to='/login'>Войти</NavLink>\r\n      </p>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default ForgotPassword;","import React, { FC, FormEvent } from \"react\";\r\nimport styles from \"./profile-navigation.module.css\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { logout } from \"../../services/actions/user-info\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\ntype TProfileNavigationProps = {\r\n  text: string;\r\n}\r\n\r\nconst ProfileNavigation: FC<TProfileNavigationProps> = ({ text }) => {\r\n  const dispatch = useAppDispatch();\r\n  \r\n  const { logOutError } = useAppSelector((state) => state.userInfo);\r\n  \r\n  const history = useHistory();\r\n\r\n  const handleLogOut = (event: FormEvent) => {\r\n    event.preventDefault();\r\n    dispatch(logout(history));\r\n    history.replace({ pathname: \"/login\" });\r\n  };\r\n\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink\r\n        exact\r\n        to=\"/profile\"\r\n        className={styles.link}\r\n        activeClassName={styles.active}\r\n      >\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Профиль\r\n        </p>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/profile/orders\"\r\n        className={styles.link}\r\n        activeClassName={styles.active}\r\n      >\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          История заказов\r\n        </p>\r\n      </NavLink>\r\n      <NavLink\r\n        exact\r\n        to=\"/login\"\r\n        className={styles.link}\r\n        activeClassName={styles.active}\r\n        onClick={handleLogOut}\r\n      >\r\n        <p className=\"text text_type_main-default text_color_inactive\">Выход</p>\r\n      </NavLink>\r\n      {logOutError\r\n        ? <p className={`${styles.error} text text_type_main-default mt-10`}>\r\n            {logOutError}\r\n          </p>\r\n        : null\r\n      }\r\n      <p\r\n        className={`${styles.info} text text_type_main-default text_color_inactive mt-20`}\r\n      >\r\n        {text}\r\n      </p> \r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default ProfileNavigation;\r\n","import React, { useEffect, useState, FormEvent } from \"react\";\r\nimport styles from \"./profile-page.module.css\";\r\nimport ProfileNavigation from \"../../components/profile-navigation/profile-navigation\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {\r\n  getUser,\r\n  updateUserInfo,\r\n  } from \"../../services/actions/user-info\";\r\nimport { Loader } from \"../../components/ui/loader/loader\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\n\r\nfunction ProfilePage() {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  }, [dispatch]);\r\n\r\n  const { userUnfo } = useAppSelector((store) => store.userInfo);\r\n  \r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isChanged, setIsChanged] = useState({\r\n    name: false,\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUserData({ name: userUnfo.name, email: userUnfo.email, password: \"\" });\r\n    setIsChanged({ name: false, email: false, password: false });\r\n  }, [userUnfo]);\r\n\r\n  const handleUpdateUserSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(updateUserInfo(userData.name, userData.email, userData.password));\r\n  };\r\n\r\n  const nameResetHandler = () => {\r\n    setUserData({ ...userData, name: userUnfo.name });\r\n    setIsChanged({ ...isChanged, name: false });\r\n  };\r\n\r\n  const emailResetHandler = () => {\r\n    setUserData({ ...userData, email: userUnfo.email });\r\n    setIsChanged({ ...isChanged, email: false });\r\n  };\r\n\r\n  const passwordResetHandler = () => {\r\n    setUserData({ ...userData, password: \"\" });\r\n    setIsChanged({ ...isChanged, password: false });\r\n  };\r\n\r\n  const nameChangeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, name: e.currentTarget.value });\r\n    e.currentTarget.value !== userUnfo.name\r\n      ? setIsChanged({ ...isChanged, name: true })\r\n      : setIsChanged({ ...isChanged, name: false });\r\n  };\r\n\r\n  const emailChangeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, email: e.currentTarget.value });\r\n    e.currentTarget.value !== userUnfo.email\r\n      ? setIsChanged({ ...isChanged, email: true })\r\n      : setIsChanged({ ...isChanged, email: false });\r\n  };\r\n\r\n  const passwordChangeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, password: e.currentTarget.value });\r\n    e.currentTarget.value !== \"\"\r\n      ? setIsChanged({ ...isChanged, password: true })\r\n      : setIsChanged({ ...isChanged, password: false });\r\n  };\r\n\r\n  const resetButtonHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setUserData({ name: userUnfo.name, email: userUnfo.email, password: \"\" });\r\n  };\r\n\r\n  const isSomeChanges = Object.values(isChanged).some(Boolean);\r\n  if (!userUnfo.name) return <Loader />;\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.profile}>\r\n      <ProfileNavigation text='В этом разделе вы можете изменить свои персональные данные'/>\r\n\r\n        <form className={styles[\"cont-input\"]}>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Имя\"\r\n            name=\"name\"\r\n            value={userData.name}\r\n            icon={isChanged.name ? \"CloseIcon\" : \"EditIcon\"}\r\n            onChange={nameChangeHandler}\r\n            onIconClick={nameResetHandler}\r\n          />\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Логин\"\r\n            value={userData.email}\r\n            onChange={emailChangeHandler}\r\n            onIconClick={emailResetHandler}\r\n            icon={isChanged.email ? \"CloseIcon\" : \"EditIcon\"}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            value={userData.password}\r\n            onChange={passwordChangeHandler}\r\n            onIconClick={passwordResetHandler}\r\n            icon={isChanged.password ? \"CloseIcon\" : \"EditIcon\"}\r\n          />\r\n\r\n          {isSomeChanges ? (\r\n            <div className={styles.buttons}>\r\n              <Button\r\n                type=\"secondary\"\r\n                size=\"medium\"\r\n                onClick={resetButtonHandler}\r\n              >\r\n                Отмена\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"medium\"\r\n                onClick={handleUpdateUserSubmit}\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import { TOrder, TError } from \"../../utils/types\";\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_ORDERS: 'WS_GET_ORDERS' = 'WS_GET_ORDERS';\r\nexport const WS_SET_ORDER: 'WS_SET_ORDER' = 'WS_SET_ORDER';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\nexport const CLOSE_POPUP_ORDER_INFO: 'CLOSE_POPUP_ORDER_INFO' = 'CLOSE_POPUP_ORDER_INFO'; \r\nexport const OPEN_POPUP_ORDER_INFO: 'OPEN_POPUP_ORDER_INFO' = 'OPEN_POPUP_ORDER_INFO';\r\n\r\ntype TWSOpenPopupOrderInfoAction = {\r\n    type: typeof OPEN_POPUP_ORDER_INFO\r\n}\r\n\r\ntype TWSClosePopupOrderInfoAction = {\r\n    type: typeof CLOSE_POPUP_ORDER_INFO\r\n}\r\n\r\ntype TWSConnectionSuccessAction = {\r\n    type: typeof WS_CONNECTION_SUCCESS\r\n}\r\n\r\ntype TWSConnectionStartAction = {\r\n    type: typeof WS_CONNECTION_START\r\n}\r\n\r\ntype TWSConnectionErrorAction = {\r\n    type: typeof WS_CONNECTION_ERROR;\r\n    payload: TError | null;\r\n}\r\n\r\ntype TWSConnectionClosedAction = {\r\n    type: typeof WS_CONNECTION_CLOSED\r\n}\r\n\r\ntype TWSGetOrdersAction = {\r\n    type: typeof WS_GET_ORDERS;\r\n    payload: { orders: Array<TOrder>; total: number; totalToday: number }\r\n}\r\n\r\ntype TWSSetOrderAction = {\r\n    type: typeof WS_SET_ORDER;\r\n    number: number;\r\n}\r\n\r\ntype TWSSendMessage = {\r\n    type: typeof WS_SEND_MESSAGE;\r\n}\r\n\r\nexport const wsActions = {\r\n    wsInit: WS_CONNECTION_START as typeof WS_CONNECTION_START,\r\n    onOpen: WS_CONNECTION_SUCCESS as typeof WS_CONNECTION_SUCCESS,\r\n    onError: WS_CONNECTION_ERROR as typeof WS_CONNECTION_ERROR,\r\n    onClose: WS_CONNECTION_CLOSED as typeof WS_CONNECTION_CLOSED,\r\n    onMessage: WS_GET_ORDERS as typeof WS_GET_ORDERS,\r\n    wsSendMessage: WS_SEND_MESSAGE as typeof WS_SEND_MESSAGE,\r\n};\r\n\r\nexport type TWsActions = typeof wsActions;\r\n\r\nexport type TWSActions = TWSConnectionSuccessAction |\r\n    TWSConnectionStartAction |\r\n    TWSConnectionErrorAction |\r\n    TWSConnectionClosedAction |\r\n    TWSGetOrdersAction |\r\n    TWSSetOrderAction | TWSSendMessage | TWSClosePopupOrderInfoAction \r\n    | TWSOpenPopupOrderInfoAction ","export const transformDate = (date: string) => {\r\n  const getDiffDays = (days: number) =>\r\n    days === 0\r\n      ? 'Сегодня'\r\n      : days === 1\r\n      ? 'Вчера'\r\n      : days > 4\r\n      ? `${days} дней назад`\r\n      : days > 1\r\n      ? `${days} дня назад`\r\n      : '';\r\n  const dataCreate = new Date(date);\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const diffTime = Math.ceil((+today - +dataCreate) / (60 * 60 * 24 * 1000));\r\n  const hours =\r\n    dataCreate.getHours() > 9\r\n      ? dataCreate.getHours()\r\n      : `0${dataCreate.getHours()}`;\r\n  const min =\r\n    dataCreate.getMinutes() > 9\r\n      ? dataCreate.getMinutes()\r\n      : `0${dataCreate.getMinutes()}`;\r\n  return `${getDiffDays(diffTime)}, ${hours}:${min} i-GMT+${\r\n    (dataCreate.getTimezoneOffset() * -1) / 60\r\n  }`;\r\n};","import React, { FC, useMemo } from \"react\";\r\nimport styles from \"./order-item.module.css\";\r\nimport { TIngredient, TOrder } from \"../../utils/types\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { transformDate } from \"../../utils/formating\";\r\nimport { useAppSelector } from \"../../utils/hooks\";\r\n\r\ntype TOrderProps = {\r\n  order: TOrder;\r\n};\r\n\r\nconst OrderItem: FC<TOrderProps> = ({ order }) => {\r\n\r\n  const { ingredients } = useAppSelector((state) => state.burgerIngredientsData);\r\n\r\n  const ordersImages = useMemo(() => {\r\n    return order.ingredients.map((orderId: string) => {\r\n      return ingredients?.find((ingredient: TIngredient) => {\r\n        return ingredient._id === orderId;\r\n      });\r\n    });\r\n  }, [order.ingredients, ingredients]);\r\n\r\n  const visibleOrdersImages = useMemo(() => {\r\n    return ordersImages.slice(0, 6);\r\n  }, [ordersImages]);\r\n\r\n  const countHiddenOrdersImages = useMemo(() => {\r\n    return order.ingredients.length - visibleOrdersImages.length;\r\n  }, [order.ingredients, visibleOrdersImages]);\r\n\r\n  const bunsCount = useMemo(() => {\r\n    return ordersImages.filter((item) => item?.type === \"bun\").length;\r\n  }, [ordersImages]);\r\n\r\n  const orderPrice = useMemo(() => {\r\n    return ordersImages.reduce((acc, item) => {\r\n      if (item?.type !== \"bun\") return (acc += item?.price || 0);\r\n\r\n      return (acc += bunsCount === 1 ? item?.price * 2 : item?.price);\r\n    }, 0);\r\n  }, [ordersImages, bunsCount]);\r\n\r\n  const showStatus = (status: string | null) => {\r\n    if (status === \"done\") {\r\n      return \"Выполнен\";\r\n    }\r\n    if (status === \"pending\") {\r\n      return \"Готовится\";\r\n    }\r\n    if (status === \"pending\") {\r\n      return \"Создан\";\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.link}>\r\n      <div className={styles.top}>\r\n        <span className=\"text text_type_digits-default\"># {order.number}</span>\r\n        <span className=\"text text_type_main-default text_color_inactive\">\r\n          {transformDate(order.updatedAt)}\r\n        </span>\r\n      </div>\r\n      <span className={`${styles.name} text text_type_main-medium mt-6`}>\r\n        {order.name}\r\n      </span>\r\n      <span className={`text text_type_main-default mt-2 mb-6 ${`${order?.status === \"done\"} && ${styles[\"status-done\"]}`}`}>\r\n        {showStatus(order.status)}\r\n      </span>\r\n      <div className={styles.bottom}>\r\n        <div className={styles[\"image-boxes\"]}>\r\n          {visibleOrdersImages.map(\r\n            (item, index: React.Key | null | undefined) => (\r\n              <div\r\n                key={index}\r\n                className={styles[\"image-box\"]}\r\n                style={{\r\n                  backgroundImage: `url(\"${item?.image_mobile}\")`,\r\n                }}\r\n              >\r\n                {index === visibleOrdersImages.length - 1 &&\r\n                countHiddenOrdersImages ? (\r\n                  <p\r\n                    className={`${styles[\"hidden-count\"]} text text_type_main-default`}\r\n                  >\r\n                    +{countHiddenOrdersImages}\r\n                  </p>\r\n                ) : null}\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className={styles.price}>\r\n          <span className=\"text text_type_digits-default\">{orderPrice}</span>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React, { FC } from \"react\";\r\nimport styles from \"./order-item-list.module.css\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport OrderItem from \"../order-item/order-item\";\r\nimport { Loader } from \"../ui/loader/loader\";\r\nimport { useAppSelector } from \"../../utils/hooks\";\r\nimport { TOrder } from \"../../utils/types\";\r\n\r\nconst OrderItemList: FC = () => {\r\n  const location = useLocation();\r\n  const { orders } = useAppSelector((store) => store.ordersInfo);\r\n\r\n  return (\r\n    <div className={styles.list}>\r\n      {orders ? (\r\n        orders?.slice(0, 10).map((order: TOrder) =>\r\n          order.ingredients ? (\r\n            <Link\r\n              to={{\r\n                pathname: `/feed/${order._id}`,\r\n                state: { background: location },\r\n              }}\r\n              className={styles.link}\r\n              key={order._id}\r\n            >\r\n              <OrderItem\r\n                order={order}\r\n                key={order._id}\r\n              />\r\n            </Link>\r\n          ) : null\r\n        )\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItemList;\r\n","import styles from \"./feed.module.css\";\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_CLOSED,\r\n} from \"../../services/actions/ws-actions\";\r\nimport { useEffect } from \"react\";\r\nimport { ORDERS_URL } from \"../../utils/constants\";\r\nimport { Loader } from \"../../components/ui/loader/loader\";\r\nimport OrderItemList from \"../../components/order-item-list/order-item-list\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\nimport { TOrder } from \"../../utils/types\";\r\n\r\nfunction Feed() {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START, wsUrl: ORDERS_URL });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const { orders, total, totalToday } = useAppSelector((store) => store.ordersInfo);\r\n\r\n  return (\r\n    <div className={` ${styles.container} pt-10`}>\r\n      <h1 className=\"text text_type_main-large\">Лента заказов</h1>\r\n      {orders ? (\r\n        <div className={styles.content}>\r\n          <div className={styles.list}>\r\n            <OrderItemList />\r\n          </div>\r\n          <div className={styles.info}>\r\n            <div className={styles.status}>\r\n              <div className={styles[\"item\"]}>\r\n                <p className=\"text text_type_main-medium mb-5\">Готовы:</p>\r\n                <div className={styles[\"item-done\"]}>\r\n                  {orders?.slice(0, 10).map((order: TOrder) =>\r\n                    order.status === \"done\" ? (\r\n                      <p\r\n                        className={`${styles.done} text text_type_digits-default`}\r\n                        key={order._id}\r\n                      >\r\n                        {order.number}\r\n                      </p>\r\n                    ) : null\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={styles.item}>\r\n                <p className=\"text text_type_main-medium mb-5\">В работе:</p>\r\n                {orders?.slice(0, 10).map((order: TOrder) =>\r\n                  order.status === \"pending\" || order.status === \"created\" ? (\r\n                    <p\r\n                      key={order._id}\r\n                      className={`${styles.done} text text_type_digits-default`}\r\n                    >\r\n                      {order.number}\r\n                    </p>\r\n                  ) : null\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-15\">\r\n              <p className=\"text text_type_main-medium\">\r\n                Выполнено за все время:\r\n              </p>\r\n              <p className={`${styles.glow} text text_type_digits-large`}>\r\n                {total}\r\n              </p>\r\n            </div>\r\n            <div className=\"mt-15\">\r\n              <p className=\"text text_type_main-medium\">\r\n                Выполнено за сегодня:\r\n              </p>\r\n              <p className={`${styles.glow} text text_type_digits-large`}>\r\n                {totalToday}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","import { TOrder, TError } from \"../../utils/types\";\r\nexport const WS_PRIVATE_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_PRIVATE_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_PRIVATE_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_PRIVATE_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_PRIVATE_GET_ORDERS: 'WS_GET_ORDERS' = 'WS_GET_ORDERS';\r\nexport const WS_PRIVATE_SET_ORDER: 'WS_SET_ORDER' = 'WS_SET_ORDER';\r\nexport const WS_PRIVATE_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\n\r\ntype TWSConnectionPrivateSuccessAction = {\r\n    type: typeof WS_PRIVATE_CONNECTION_SUCCESS\r\n}\r\n\r\ntype TWSConnectionPrivateStartAction = {\r\n    type: typeof WS_PRIVATE_CONNECTION_START\r\n}\r\n\r\ntype TWSConnectionPrivateErrorAction = {\r\n    type: typeof WS_PRIVATE_CONNECTION_ERROR;\r\n    payload: TError | null;\r\n}\r\n\r\ntype TWSConnectionPrivateClosedAction = {\r\n    type: typeof WS_PRIVATE_CONNECTION_CLOSED\r\n}\r\n\r\ntype TWSGetOrdersPrivateAction = {\r\n    type: typeof WS_PRIVATE_GET_ORDERS;\r\n    payload: { orders: Array<TOrder>; total: number; totalToday: number }\r\n}\r\n\r\ntype TWSSetOrderPrivateAction = {\r\n    type: typeof WS_PRIVATE_SET_ORDER;\r\n    number: number;\r\n}\r\n\r\ntype TWSSendPrivateMessage = {\r\n    type: typeof WS_PRIVATE_SEND_MESSAGE;\r\n}\r\n\r\nexport const wsPrivateActions = {\r\n    wsInit: WS_PRIVATE_CONNECTION_START as typeof WS_PRIVATE_CONNECTION_START,\r\n    onOpen: WS_PRIVATE_CONNECTION_SUCCESS as typeof WS_PRIVATE_CONNECTION_SUCCESS,\r\n    onError: WS_PRIVATE_CONNECTION_ERROR as typeof WS_PRIVATE_CONNECTION_ERROR,\r\n    onClose: WS_PRIVATE_CONNECTION_CLOSED as typeof WS_PRIVATE_CONNECTION_CLOSED,\r\n    onMessage: WS_PRIVATE_GET_ORDERS as typeof WS_PRIVATE_GET_ORDERS,\r\n    wsSendMessage: WS_PRIVATE_SEND_MESSAGE as typeof WS_PRIVATE_SEND_MESSAGE,\r\n};\r\n\r\nexport type TWsPrivateActions = typeof wsPrivateActions;\r\n\r\nexport type TWSPrivateActions = TWSConnectionPrivateSuccessAction |\r\nTWSConnectionPrivateStartAction |\r\nTWSConnectionPrivateErrorAction |\r\nTWSConnectionPrivateClosedAction |\r\nTWSGetOrdersPrivateAction |\r\nTWSSetOrderPrivateAction | TWSSendPrivateMessage","import React, { FC, useEffect } from \"react\";\r\nimport styles from \"./order-item-details.module.css\";\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Loader } from \"../ui/loader/loader\";\r\nimport { transformDate } from \"../../utils/formating\";\r\nimport {\r\n  WS_CONNECTION_START  \r\n} from \"../../services/actions/ws-actions\";\r\nimport {\r\n  WS_PRIVATE_CONNECTION_START,\r\n} from \"../../services/actions/ws-private-actions\";\r\nimport { ORDERS_URL, USER_ORDERS_URL } from \"../../utils/constants\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\nimport { TIngredient } from \"../../utils/types\";\r\n\r\nconst OrderItemDetails: FC = () => {\r\n  const isProfile = !!useRouteMatch(\"/profile\");\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      isProfile\r\n        ? {\r\n            type: WS_PRIVATE_CONNECTION_START,\r\n            wsUrl: USER_ORDERS_URL,\r\n            token: getCookie(\"accessToken\"),\r\n          }\r\n        : { type: WS_CONNECTION_START, wsUrl: ORDERS_URL }\r\n    );\r\n  }, [dispatch, isProfile]);\r\n\r\n  const { ingredients } = useAppSelector(\r\n    (state) => state.burgerIngredientsData\r\n  );\r\n  const { orders } = useAppSelector((store) =>\r\n    isProfile ? store.ordersInfo : store.wsPrivateReducer\r\n  );\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const selectedOrder =\r\n    orders && orders.find((item: { _id: string }) => item._id === id);\r\n  const listId = orders && selectedOrder?.ingredients;\r\n\r\n  const orderIngredients =\r\n    orders &&\r\n    listId?.map((id: string) => {\r\n      return ingredients?.find((item: TIngredient) => item._id === id);\r\n    });\r\n\r\n  const price =\r\n    orders &&\r\n    orderIngredients?.reduce((sum, item) => {\r\n      return sum + (item?.price || 0);\r\n    }, 0);\r\n\r\n  const showStatus = (status: string | null) => {\r\n    if (status === \"done\") {\r\n      return \"Выполнен\";\r\n    }\r\n    if (status === \"pending\") {\r\n      return \"Готовится\";\r\n    }\r\n    if (status === \"pending\") {\r\n      return \"Создан\";\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const status = selectedOrder && showStatus(selectedOrder.status);\r\n\r\n  if (!orders.length) return null;\r\n\r\n  return selectedOrder ? (\r\n    <div className={styles.order}>\r\n      <span className={`text text_type_digits-default mb-10 ${styles.number}`}>\r\n        #{selectedOrder?.number}\r\n      </span>\r\n      <h1\r\n        className={`text text_type_main-medium mb-3 ${styles[\"left-align\"]} ${styles[\"order-name\"]} `}\r\n      >\r\n        {selectedOrder?.name}\r\n      </h1>\r\n      <span\r\n        className={`text text_type_main-default mb-15 ${\r\n          styles[\"left-align\"]\r\n        } ${`${selectedOrder?.status === \"done\"} && ${\r\n          styles[\"status-done\"]\r\n        }`}   `}\r\n      >\r\n        {status}\r\n      </span>\r\n      <span\r\n        className={`text text_type_main-medium mb-6 ${styles[\"left-align\"]}`}\r\n      >\r\n        Состав:\r\n      </span>\r\n      <ul className={styles.ingredients}>\r\n        {orderIngredients?.map((item, index) => (\r\n          <li key={index} className={styles.ingredient}>\r\n            <div className={styles[\"ingredient-preview\"]}>\r\n              <div\r\n                className={styles[\"image-box\"]}\r\n                style={{\r\n                  backgroundImage: `url(\"${item?.image_mobile}\")`,\r\n                }}\r\n              />\r\n              <span className=\"text text_type_main-default mr-4 ml-4\">\r\n                {item?.name}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className={`text text_type_digits-default ${styles.price}`}>\r\n                {item?.price} <CurrencyIcon type=\"primary\" />\r\n              </span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className={`${styles[\"bottom-content\"]}`}>\r\n        <span className=\"text text_type_main-default text_color_inactive\">\r\n          {transformDate(selectedOrder.updatedAt)}\r\n        </span>\r\n        <div className={styles[\"order-price\"]}>\r\n          <span className=\"text text_type_digits-default\">{price}</span>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nexport default OrderItemDetails;\r\n","import styles from \"./order-item-details-page.module.css\";\r\nimport OrderItemDetails from \"../../components/order-item-details/order-item-details\";\r\n\r\nconst OrderItemDetailsPage = () => {\r\n  \r\n    return (\r\n    <div className={styles.block}>\r\n      <OrderItemDetails />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItemDetailsPage;\r\n","import React, { useState, FormEvent } from 'react';\r\nimport { PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink, Redirect, useHistory } from \"react-router-dom\";\r\nimport styles from './reset-password.module.css';\r\nimport { setNewPasswordValue} from '../../services/actions/user-info';\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\n\r\nfunction ResetPassword() {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch()\r\n  const { isResponsedEmail } = useAppSelector((store) => store.userInfo);\r\n  const [passwordValue, setPassword] = useState('');\r\n  const [code, setCode] = useState('');\r\n\r\n  const handlePasswordSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(setNewPasswordValue(passwordValue, code, history))\r\n  }\r\n\r\n  if (!isResponsedEmail)\r\n    return <Redirect to='/login' />\r\n  \r\n  return (\r\n    <form className={styles.content} onSubmit={handlePasswordSubmit}>\r\n      <h1 className='text text_type_main-medium'>Восстановление пароля</h1>\r\n      <PasswordInput\r\n        name='password'\r\n        onChange={e => setPassword(e.target.value)}\r\n        value={passwordValue}\r\n      />\r\n      <Input\r\n        type='text'\r\n        placeholder='Введите код из письма'\r\n        name='code'\r\n        onChange={e => setCode(e.target.value)}\r\n        value={code}\r\n        />\r\n    <Button type='primary' size='medium'>Восстановить</Button>\r\n      <p className='text text_type_main-default text_color_inactive mt-20'>\r\n      Вспомнили пароль? <NavLink className={styles.link} to='/login'>Войти</NavLink>\r\n      </p>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default ResetPassword;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <h1 className=\"text text_type_main-large m-30\" style={{ textAlign: 'center'}}>\r\n      Oops! 404 Error\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react';\r\nimport IngredientDetails from '../../components/ingredient-details/ingredient-details';\r\nimport styles from './ingredient-details-page.module.css';\r\n\r\nconst IngredientDetailsPage = () => {\r\n\r\n  return (\r\n    <>\r\n      <h1 className={`${styles.title} text text_type_main-large mt-10 mr-10 ml-10`}>\r\n        Детали ингредиента\r\n      </h1>\r\n    <IngredientDetails />\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default IngredientDetailsPage;","import React, { FC } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from '../../utils/types';\r\nimport { RouteProps } from 'react-router';\r\n\r\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const { userUnfo } = useSelector((store: RootState) => store.userInfo);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        userUnfo.email ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import styles from \"./user-orders.module.css\";\r\nimport ProfileNavigation from \"../../components/profile-navigation/profile-navigation\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { USER_ORDERS_URL } from \"../../utils/constants\";\r\nimport {\r\n  WS_PRIVATE_CONNECTION_START,\r\n  WS_PRIVATE_CONNECTION_CLOSED,\r\n} from \"../../services/actions/ws-private-actions\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport OrderItem from \"../../components/order-item/order-item\";\r\nimport { Loader } from \"../../components/ui/loader/loader\";\r\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks\";\r\nimport { TOrder } from \"../../utils/types\";\r\n\r\nfunction UserOrders() {\r\n  const location = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  const { ingredients } = useAppSelector((state) => state.burgerIngredientsData);\r\n  \r\n  useEffect(() => {\r\n    dispatch({ type: WS_PRIVATE_CONNECTION_START, wsUrl: USER_ORDERS_URL, token: getCookie(\"accessToken\") });\r\n    return () => {\r\n      dispatch({ type: WS_PRIVATE_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const { orders } = useAppSelector((state) => state.wsPrivateReducer);\r\n\r\n  return (\r\n    <div className={styles.orders}>\r\n      <div className={styles.container}>\r\n        <ProfileNavigation text=\"В этом разделе вы можете просмотреть свою историю заказов\" />\r\n        \r\n        <div className={styles.list}>\r\n        { orders.length && ingredients.length ? (\r\n          \r\n          orders.map((order: TOrder) =>\r\n            // order.ingredients ? (\r\n              <Link\r\n              key={order._id}\r\n              to={{\r\n                pathname: `/profile/orders/${order._id}`,\r\n                state: { background: location },\r\n              }}\r\n              className={styles.link}\r\n            >\r\n              <OrderItem\r\n                order={order}\r\n                key={order._id}\r\n            />\r\n              </Link>\r\n            // ) : null\r\n          )\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserOrders;\r\n","import { getIngredients } from '../../utils/api';\r\nimport { AppDispatch } from '../../utils/types';\r\nimport { TIngredient } from '../../utils/types';\r\nexport const GET_ITEMS_REQUEST = 'GET_ITEMS_REQUEST';\r\nexport const GET_ITEMS_SUCCESS = 'GET_ITEMS_SUCCESS';\r\nexport const GET_ITEMS_FAILED = 'GET_ITEMS_FAILED';\r\n\r\ntype TGetItemsSuccesAction = {\r\n  type: typeof GET_ITEMS_SUCCESS ;\r\n  ingredients: Array<TIngredient>;\r\n}\r\n\r\ntype TGetItemsRequestAction = {\r\n  type: typeof GET_ITEMS_REQUEST;\r\n}\r\n\r\ntype TGetItemsFailedAction = {\r\n  type: typeof GET_ITEMS_FAILED;\r\n}\r\n\r\nexport type TBurgerIngredientsDataActions = \r\nTGetItemsSuccesAction |\r\nTGetItemsRequestAction |\r\nTGetItemsFailedAction\r\n\r\nexport const getItems = () => (dispatch: AppDispatch) => {\r\n    dispatch({ type: GET_ITEMS_REQUEST });\r\n    getIngredients()\r\n      .then(res => dispatch({ type: GET_ITEMS_SUCCESS, ingredients: res.data }))\r\n      .catch((err) => dispatch({ type: GET_ITEMS_FAILED }))\r\n  }\r\n  ","import React, { FC, useEffect } from \"react\";\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport styles from \"./app.module.css\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useHistory,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { Location } from \"history\";\r\nimport HomePage from \"../../pages/home-page/home-page\";\r\nimport LoginPage from \"../../pages/login-page/login-page\";\r\nimport RegistrationPage from \"../../pages/registration-page/registration-page\";\r\nimport ForgotPassword from \"../../pages/forgot-password/forgot-password\";\r\nimport ProfilePage from \"../../pages/profile-page/profile-page\";\r\nimport Feed from \"../../pages/feed/feed\";\r\nimport OrderItemDetailsPage from \"../../pages/order-item-details-page/order-item-details-page\";\r\nimport ResetPassword from \"../../pages/reset-password/reset-password\";\r\nimport NotFound from \"../../pages/not-found/not-found\";\r\nimport IngredientDetailsPage from \"../../pages/ingredient-details-page/ingredient-details-page\";\r\nimport { ProtectedRoute } from \"../protected-route/protected-route\";\r\nimport UserOrders from \"../../pages/user-orders/user-orders\";\r\nimport { updateToken, getUser } from \"../../services/actions/user-info\";\r\nimport { getItems } from \"../../services/actions/burger-ingredients-data\";\r\nimport Modal from \"../modal/modal\";\r\nimport { CLOSE_POPUP_ORDER_INFO } from \"../../services/actions/ws-actions\";\r\nimport { useAppDispatch } from \"../../utils/hooks\";\r\n\r\ntype TLocationState = {\r\n  background: Location<unknown>;\r\n};\r\n\r\nconst App: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n    dispatch(getItems());\r\n    dispatch(updateToken());\r\n  }, [dispatch]);\r\n\r\n  const ModalSwitch = () => {\r\n    const location = useLocation<TLocationState>();\r\n    const history = useHistory();\r\n\r\n    const isShowModal = history.action === \"PUSH\";\r\n\r\n    const onModalHideClick = () => {\r\n      dispatch({\r\n        type: CLOSE_POPUP_ORDER_INFO,\r\n      });\r\n      history.go(-1);\r\n    };\r\n\r\n    const background =\r\n      history.action === \"PUSH\" && location.state && location.state.background;\r\n\r\n    return (\r\n      <div className={styles.app}>\r\n        <AppHeader />\r\n        <Switch location={background || location}>\r\n          <Route path=\"/\" exact={true}>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/login\" exact={true}>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/ingredients/:id\" exact={true}>\r\n            <IngredientDetailsPage />\r\n          </Route>\r\n          <Route path=\"/register\" exact={true}>\r\n            <RegistrationPage />\r\n          </Route>\r\n          <Route path=\"/forgot-password\" exact={true}>\r\n            <ForgotPassword />\r\n          </Route>\r\n          <Route path=\"/reset-password\" exact={true}>\r\n            <ResetPassword />\r\n          </Route>\r\n\r\n          <Route path=\"/feed\" exact>\r\n            <Feed />\r\n          </Route>\r\n          <Route path=\"/feed/:id\" exact>\r\n            <OrderItemDetailsPage />\r\n          </Route>\r\n          <ProtectedRoute path=\"/profile\" exact={true}>\r\n            <ProfilePage />\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n            <UserOrders />\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path=\"/profile/orders/:id\" exact>\r\n            <OrderItemDetailsPage />\r\n          </ProtectedRoute>\r\n\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n        {background && (\r\n          <>\r\n            {isShowModal ? (\r\n              <Route\r\n                path=\"/feed/:id\"\r\n                children={\r\n                  <Modal title=\"\" onModalHideClick={onModalHideClick}>\r\n                    <OrderItemDetailsPage />\r\n                  </Modal>\r\n                }\r\n              ></Route>\r\n            ) : (\r\n              <Route path=\"/feed/:id\" exact>\r\n                <OrderItemDetailsPage />\r\n              </Route>\r\n            )}\r\n\r\n            <Route\r\n              path=\"/profile/orders/:id\"\r\n              children={\r\n                <Modal title=\"\" onModalHideClick={onModalHideClick}>\r\n                  <OrderItemDetailsPage />\r\n                </Modal>\r\n              }\r\n            ></Route>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Router>\r\n      <ModalSwitch />\r\n    </Router>\r\n  );\r\n};\r\nexport default App;\r\n","import { TIngredient, TTabNames } from '../../utils/types';\r\n\r\nimport {\r\n  ADD_INGREDIENT,\r\n  DELETE_INGREDIENT,\r\n  SORT_INGREDIENTS,\r\n  CLEAR_PREV_ORDER,\r\n  CHANGE_ACTIVE_TAB,\r\n  TConstructorActions,\r\n} from \"../actions/burgers-constructor\";\r\n\r\nexport type TConstructorState = {\r\n  addedIngredients: Array<TIngredient>;\r\n  currentTab: TTabNames;\r\n}\r\n\r\nexport const initialState: TConstructorState = {\r\n  addedIngredients: [],\r\n  currentTab: 'buns'\r\n};\r\n\r\nexport const constructorReducer = (state = initialState, action: TConstructorActions): TConstructorState => {\r\n  switch (action.type) {\r\n    case ADD_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        addedIngredients:\r\n          action.ingredient.type === \"bun\"\r\n            ? [\r\n                ...state.addedIngredients.filter((item) => item.type !== \"bun\"),\r\n                action.ingredient,\r\n                action.ingredient,\r\n              ]\r\n            : [...state.addedIngredients, action.ingredient],\r\n      };\r\n    }\r\n    case DELETE_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        addedIngredients: state.addedIngredients.filter(\r\n          (item, index) => index !== action.index\r\n        ),\r\n      };\r\n    }\r\n    case CLEAR_PREV_ORDER: {\r\n      return {\r\n        ...state,\r\n        addedIngredients: []\r\n      };\r\n    }\r\n    case SORT_INGREDIENTS: {\r\n      const newArr = [...state.addedIngredients];\r\n      \r\n      let draggedItem = newArr[action.dragIndex];\r\n      let targetItem = newArr[action.hoverIndex];\r\n      newArr.splice(action.dragIndex, 1, targetItem);\r\n      newArr.splice(action.hoverIndex, 1, draggedItem);\r\n      \r\n      return {\r\n        ...state,\r\n        addedIngredients: newArr\r\n      }\r\n    }\r\n\r\n    case CHANGE_ACTIVE_TAB: {\r\n      return {\r\n        ...state,\r\n        currentTab: action.activeTab\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { TOrder } from '../../utils/types';\r\nimport {\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAILED,\r\n  HIDE_ORDER_INFO,\r\n  TOrderActions\r\n} from \"../actions/order-details\";\r\n\r\nexport type TOrderState = {\r\n  numberOrder: TOrder | null;\r\n  orderRequest: boolean;\r\n  orderRequestFaild: boolean;\r\n}\r\n\r\n\r\nexport const initialState: TOrderState = {\r\n    numberOrder: null,\r\n    orderRequest: false,\r\n    orderRequestFaild: false,\r\n};\r\n\r\nexport const orderReducer = (state = initialState, action: TOrderActions): TOrderState => {\r\n    switch (action.type) {\r\n      case GET_ORDER_REQUEST: {\r\n        return {\r\n          ...state,\r\n          orderRequest: true,\r\n        };\r\n      }\r\n      case GET_ORDER_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          orderRequest: false,\r\n          numberOrder: action.order,\r\n        };\r\n      }\r\n      case GET_ORDER_FAILED: {\r\n        return {\r\n          ...state,\r\n          orderRequestFaild: true,\r\n        };\r\n      }\r\n      case HIDE_ORDER_INFO: {\r\n        return {\r\n          ...state,\r\n          orderRequestFaild: false,\r\n          numberOrder: null,\r\n        };\r\n      }\r\n    default: {\r\n        return state;\r\n      }\r\n    }\r\n  };","import {\r\n    GET_ITEMS_FAILED,\r\n    GET_ITEMS_REQUEST,\r\n    GET_ITEMS_SUCCESS,\r\n    TBurgerIngredientsDataActions\r\n  } from \"../actions/burger-ingredients-data\";\r\n  import { TIngredient } from '../../utils/types';\r\n\r\ntype TIngredientsState = {\r\n    ingredients: Array<TIngredient>;\r\n    itemsRequest: boolean;\r\n    itemsFailed: boolean;\r\n}\r\n  \r\n  export const initialState: TIngredientsState = {\r\n    ingredients: [],\r\n    itemsRequest: false,\r\n    itemsFailed: false,\r\n  };\r\n  \r\n  export const burgerIngredientsDataReducer = (state = initialState, action: TBurgerIngredientsDataActions): TIngredientsState => {\r\n    switch (action.type) {\r\n      case GET_ITEMS_REQUEST: {\r\n        return {\r\n          ...state,\r\n          itemsRequest: true,\r\n        };\r\n      }\r\n      case GET_ITEMS_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          itemsFailed: false,\r\n          ingredients: action.ingredients,\r\n          itemsRequest: false,\r\n        };\r\n      }\r\n      case GET_ITEMS_FAILED: {\r\n        return { ...state, itemsFailed: true, itemsRequest: false };\r\n      }\r\n        \r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };","import {\r\n  DISPLAY_INGREDIENT_INFO,\r\n  HIDE_INGREDIENT_INFO,\r\n  TIngredientInfoActions\r\n} from \"../actions/ingredient-details\";\r\nimport { TIngredient } from '../../utils/types';\r\n\r\nexport type TIngredientState = {\r\n  selectedIngredient: TIngredient | null;\r\n}\r\n\r\nexport const initialState: TIngredientState = {\r\n  selectedIngredient: null,\r\n};\r\n\r\nexport const ingredientReducer = (state = initialState, action: TIngredientInfoActions): TIngredientState => {\r\n  switch (action.type) {\r\n    case DISPLAY_INGREDIENT_INFO: {\r\n      return { ...state, selectedIngredient: action.info };\r\n    }\r\n    case HIDE_INGREDIENT_INFO: {\r\n      return { ...state, selectedIngredient: null };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  GET_USER_REQUEST,\r\n  SET_USER_INFO,\r\n  REMOVE_USER_INFO,\r\n  RESPONSED_EMAIL,\r\n  SET_LOGIN_REQUEST_ERROR,\r\n  SET_REGISTER_REQUEST_ERROR,\r\n  SET_LOGOUT_REQUEST_ERROR,\r\n  REFRESH_TOKEN_REQUEST,\r\n  REFRESH_TOKEN_ERROR,\r\n  REFRESH_TOKEN_SUCCESS,\r\n\r\n    TUserInfoAction\r\n} from \"../actions/user-info\";\r\n\r\nexport type TUserInfoState = {\r\n  userUnfo: { name: string, email: string };\r\n  userRequest: boolean;\r\n  registerError: string;\r\n  loginError: string;\r\n  logOutError: string;\r\n  isResponsedEmail: boolean;\r\n  refreshTokenRequest: boolean;\r\n  refreshTokenError: boolean,\r\n  refreshTokenSuccess: boolean,\r\n}\r\n\r\nexport const initialState: TUserInfoState = {\r\n  userUnfo: { name: \"\", email: \"\" },\r\n  userRequest: false,\r\n  registerError: '',\r\n  loginError: '',\r\n  logOutError: '',\r\n  isResponsedEmail: false,\r\n  refreshTokenRequest: false,\r\n  refreshTokenSuccess: false,\r\n  refreshTokenError: false,\r\n};\r\n\r\nexport const userReducer = (state = initialState, action: TUserInfoAction): TUserInfoState => {\r\n  switch (action.type) {\r\n    case GET_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        userRequest: true,\r\n      };\r\n    }\r\n    case SET_USER_INFO: {\r\n      return {\r\n        ...state,\r\n        userRequest: false,\r\n        userUnfo: action.user,\r\n      };\r\n    }\r\n    case SET_REGISTER_REQUEST_ERROR: {\r\n      return {\r\n        ...state,\r\n        registerError: action.message,\r\n      };\r\n    }\r\n    case SET_LOGIN_REQUEST_ERROR: {\r\n      return {\r\n        ...state,\r\n        loginError: action.message,\r\n      };\r\n    }\r\n    case SET_LOGOUT_REQUEST_ERROR: {\r\n      return {\r\n        ...state,\r\n        logOutError: action.message,\r\n      };\r\n    }\r\n    case REMOVE_USER_INFO: {\r\n      return {\r\n        ...state,\r\n        userRequest: false,\r\n        userUnfo: { name: \"\", email: \"\" },\r\n      };\r\n    }\r\n    case RESPONSED_EMAIL:\r\n      return {\r\n        ...state,\r\n        isResponsedEmail: true,\r\n      };\r\n      case REFRESH_TOKEN_REQUEST: {\r\n        return {\r\n          ...state,\r\n          refreshTokenRequest: true,\r\n          refreshTokenSuccess: false,\r\n          refreshTokenError: false,\r\n        };\r\n      }\r\n      case REFRESH_TOKEN_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          refreshTokenRequest: false,\r\n          refreshTokenSuccess: true,\r\n          refreshTokenError: false,\r\n        };\r\n      }\r\n      case REFRESH_TOKEN_ERROR: {\r\n        return {\r\n          ...state,\r\n          refreshTokenRequest: false,\r\n          refreshTokenSuccess: false,\r\n          refreshTokenError: true,\r\n        };\r\n      }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_ORDERS,\r\n    WS_SET_ORDER,\r\n    TWSActions,\r\n    OPEN_POPUP_ORDER_INFO,\r\n    CLOSE_POPUP_ORDER_INFO,\r\n} from '../actions/ws-actions';\r\nimport { TOrder, TError } from '../../utils/types';\r\n\r\ntype TWSState = {\r\n    wsConnected: boolean;\r\n    orders: Array<TOrder>;\r\n    currentOrder: number;\r\n    total: number;\r\n    totalToday: number;\r\n    error: TError | null,\r\n    popupOrderInfo: boolean\r\n}\r\n\r\nexport const initialState: TWSState = {\r\n    wsConnected: false,\r\n    orders: [],\r\n    currentOrder: 0,\r\n    total: 0,\r\n    totalToday: 0,\r\n    error: null,\r\n    popupOrderInfo: false\r\n};\r\n\r\nexport const wsReducer = (state = initialState, action: TWSActions): TWSState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wsConnected: true\r\n            };\r\n\r\n        case WS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                orders: [],\r\n                total: 0,\r\n                totalToday: 0,\r\n            };\r\n\r\n        case WS_GET_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload.orders],\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            };\r\n\r\n        case WS_SET_ORDER:\r\n            return {\r\n                ...state,\r\n                currentOrder: action.number,\r\n            };\r\n        case WS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case OPEN_POPUP_ORDER_INFO:\r\n            return {\r\n                ...state,\r\n                popupOrderInfo: true\r\n            }\r\n\r\n        case CLOSE_POPUP_ORDER_INFO:\r\n            return {\r\n                ...state,\r\n                wsConnected: true,\r\n                popupOrderInfo: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    WS_PRIVATE_CONNECTION_START,\r\n    WS_PRIVATE_CONNECTION_ERROR,\r\n    WS_PRIVATE_CONNECTION_CLOSED,\r\n    WS_PRIVATE_GET_ORDERS,\r\n    WS_PRIVATE_SET_ORDER,\r\n    TWSPrivateActions\r\n} from '../actions/ws-private-actions';\r\nimport { TOrder, TError } from '../../utils/types';\r\n\r\ntype TWSPState = {\r\n    wsConnected: boolean;\r\n    orders: Array<TOrder>;\r\n    currentOrder: number;\r\n    total: number;\r\n    totalToday: number;\r\n    error: TError | null;\r\n}\r\n\r\nexport const initialState: TWSPState = {\r\n    wsConnected: false,\r\n    orders: [],\r\n    currentOrder: 0,\r\n    total: 0,\r\n    totalToday: 0,\r\n    error: null,\r\n};\r\n\r\nexport const wsPrivateReducer = (state = initialState, action: TWSPrivateActions): TWSPState => {\r\n    switch (action.type) {\r\n        case WS_PRIVATE_CONNECTION_START:\r\n            return {\r\n                ...state,\r\n                wsConnected: true\r\n            };\r\n\r\n        case WS_PRIVATE_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                error: action.payload\r\n            };\r\n\r\n        case WS_PRIVATE_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                orders: [],\r\n                total: 0,\r\n                totalToday: 0,\r\n            };\r\n\r\n        case WS_PRIVATE_GET_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload.orders],\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            };\r\n\r\n        case WS_PRIVATE_SET_ORDER:\r\n            return {\r\n                ...state,\r\n                currentOrder: action.number,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { constructorReducer } from './burgers-constructor';\r\nimport { orderReducer} from './order-details';\r\nimport { burgerIngredientsDataReducer} from './burger-ingredients-data';\r\nimport { ingredientReducer } from './ingredient-details';\r\nimport { userReducer } from './user-info';\r\nimport { wsReducer } from './ws-reducer';\r\nimport { wsPrivateReducer } from './ws-private-reducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    burgersConstructor: constructorReducer,\r\n    order: orderReducer,\r\n    burgerIngredientsData: burgerIngredientsDataReducer,\r\n    ingredientInfo: ingredientReducer,\r\n    userInfo: userReducer,\r\n    ordersInfo: wsReducer,\r\n    wsPrivateReducer: wsPrivateReducer,\r\n});\r\n","import type { MiddlewareAPI, AnyAction } from 'redux';\r\nimport { TWsPrivateActions } from '../actions/ws-private-actions';\r\nimport { TWsActions } from '../actions/ws-actions';\r\n\r\nexport const socketMiddleware = (wsActions: TWsActions | TWsPrivateActions) => {\r\n  return (store: MiddlewareAPI) => {\r\n    let socket: WebSocket | null = null;\r\n    return (next: (i: AnyAction) => void) => (action: AnyAction) => {\r\n      const { dispatch } = store;\r\n      const { type, payload, wsUrl, token } = action;\r\n      const { wsInit, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n\r\n      if (type === wsInit) {\r\n        socket = token\r\n          ? new WebSocket(`${wsUrl}?token=${token}`)\r\n          : new WebSocket(`${wsUrl}`);\r\n      }\r\n      // if (socket?.readyState === 1 && type === onClose) {\r\n      //   socket?.close(1000)\r\n      // }\r\n      if (socket) {\r\n        socket.onopen = (event) => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n        socket.onerror = (event) => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n        socket.onmessage = (event) => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n          dispatch({ type: onMessage, payload: restParsedData });\r\n        };\r\n        socket.onclose = (event) => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n        if (type === wsSendMessage) {\r\n          const message = token ? { ...payload, token } : { ...payload };\r\n          socket.send(JSON.stringify(message));\r\n        }\r\n      }\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport { socketMiddleware } from './middleware/socketMiddleware';\r\nimport { wsActions } from './actions/ws-actions';\r\nimport { wsPrivateActions } from './actions/ws-private-actions';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsActions), socketMiddleware(wsPrivateActions)));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/app/app\";\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./services/store\";\r\n\r\nconst isProduction = process.env.NODE_ENV === 'production';\r\nconst Router: typeof HashRouter = isProduction ? HashRouter : BrowserRouter;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename=\"/reactBurger\">\r\n      <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"types\":\"burger-ingredients_types__1v1ig\",\"tabs\":\"burger-ingredients_tabs__jpU6D\",\"content\":\"burger-ingredients_content__3qE6k\",\"list\":\"burger-ingredients_list__mcjCA\",\"container\":\"burger-ingredients_container__OS2zY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"profile-navigation_nav__3bm9J\",\"link\":\"profile-navigation_link__2iGXF\",\"active\":\"profile-navigation_active__1cm7v\",\"error\":\"profile-navigation_error__2IybX\",\"info\":\"profile-navigation_info__e2yNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"order-item_link__jG0X3\",\"name\":\"order-item_name__3zBB5\",\"top\":\"order-item_top__F3nUc\",\"bottom\":\"order-item_bottom__2vstJ\",\"image-boxes\":\"order-item_image-boxes__1SCrQ\",\"hidden-count\":\"order-item_hidden-count__3h5lk\",\"image-box\":\"order-item_image-box__joyF0\",\"price\":\"order-item_price__1DPAM\",\"status-done\":\"order-item_status-done__2GNAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ingredient-details_content__2EtBD\",\"image_wrapper\":\"ingredient-details_image_wrapper__1TYlm\",\"nutrition\":\"ingredient-details_nutrition__24wk6\",\"item\":\"ingredient-details_item__3zyQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"modal_popup__27ANh\",\"container\":\"modal_container__vZLnJ\",\"close-icon\":\"modal_close-icon__1Xkcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"login-page_content__31lrX\",\"link\":\"login-page_link__21uo6\",\"error\":\"login-page_error__1QT_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile-page_container__djX_l\",\"profile\":\"profile-page_profile__3d7hB\",\"cont-input\":\"profile-page_cont-input__2Jv_F\",\"info\":\"profile-page_info__1v3Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"user-orders_orders__7rZdm\",\"container\":\"user-orders_container__3u9_i\",\"content\":\"user-orders_content__1pNLa\",\"text\":\"user-orders_text__3Kf4S\",\"info\":\"user-orders_info__100Xi\",\"list\":\"user-orders_list__2qyrb\",\"link\":\"user-orders_link__2LJD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ingredient-item_content__3idMW\",\"caption\":\"ingredient-item_caption__3lM-N\",\"price\":\"ingredient-item_price__2Jsxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"registration-page_content__2jLf4\",\"link\":\"registration-page_link__-gNGX\",\"error\":\"registration-page_error__1HlIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__NrLEB\",\"content\":\"main_content__FvZm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-details_container__2ccwT\",\"image\":\"order-details_image__14GJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"forgot-password_content__23uUT\",\"link\":\"forgot-password_link__11UR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"order-item-list_list__3iElm\",\"link\":\"order-item-list_link__2PBm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"reset-password_content__1o7Mf\",\"link\":\"reset-password_link__3VYlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__2Ct51\"};"],"sourceRoot":""}